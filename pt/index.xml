<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gustavo Varela Alvarenga on Gustavo Varela Alvarenga</title>
    <link>/pt/</link>
    <description>Recent content in Gustavo Varela Alvarenga on Gustavo Varela Alvarenga</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0400</lastBuildDate>
    <atom:link href="/pt/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Criar um gráfico de haltere (Dumbbell Plot) usando ggplot</title>
      <link>/pt/post/dotplot-ggplot/</link>
      <pubDate>Wed, 28 Nov 2018 00:00:00 -0500</pubDate>
      
      <guid>/pt/post/dotplot-ggplot/</guid>
      <description>&lt;p&gt;Uma amiga perguntou se eu poderia replicar o seguinte gráfico:
&lt;img src=&#34;dotplot_original.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Para fazer isso, eu precisava recriar os dados primeiro. Eu fiz isso como se os dados estivessem organizados da seguinte forma:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#        Country Ages_35_plus Ages_18_34
# 1      Germany         0.39       0.81
# 2       France         0.42       0.83
# 3      Vietnam         0.49       0.86
# 4        Japan         0.43       0.78
# 5       Poland         0.51       0.86
# 6      Lebanon         0.57       0.90
# 7    Australia         0.60       0.91
# 8  South Korea         0.45       0.75
# 9       Canada         0.65       0.93
# 10       Spain         0.57       0.85
# 11       Italy         0.57       0.83
# 12        Peru         0.65       0.91
# 13        U.S.         0.63       0.89
# 14          UK         0.59       0.84
# 15      Mexico         0.67       0.90
# 16       Chile         0.75       0.96
# 17       China         0.52       0.73
# 18       India         0.48       0.69
# 19      Pais A         0.60       0.40
# 20      Pais B         0.50       0.50
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eu incluí &lt;code&gt;Pais A&lt;/code&gt; e &lt;code&gt;Pais B&lt;/code&gt; para que eu tenha um país com uma diferença negativa, e outro
com uma diferença de zero.&lt;/p&gt;

&lt;p&gt;Dado isso, eu precisava fazer 4 coisas antes de começar:&lt;/p&gt;

&lt;p&gt;1) Insirir uma quebra de linha em &lt;code&gt;South Korea&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;2) Calcular as diferenças de idade&lt;/p&gt;

&lt;p&gt;3) Classificar os países pelas diferenças de idade&lt;/p&gt;

&lt;p&gt;4) Definir os nomes dos países como fatores para que possamos plotá-los na ordem correta.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# ************************************************************************* ----
# Pacotes                                                                   ----
# ************************************************************************* ----

#install.packages(&amp;quot;tidyverse&amp;quot;)

library(&amp;quot;tidyverse&amp;quot;)

# ************************************************************************* ----
# Cores - A partir do Original                                              ----
# ************************************************************************* ----

laranja &amp;lt;- &amp;quot;#e8ab5f&amp;quot;
verde &amp;lt;- &amp;quot;#a1ad62&amp;quot;

fundo_diferencas &amp;lt;- &amp;quot;#eef0e2&amp;quot;

cinza &amp;lt;- &amp;quot;#bbbbbb&amp;quot;
cinza_claro &amp;lt;- &amp;quot;#f4f4f4&amp;quot;

# ************************************************************************* ----
# Dados para Grafico de Pontos                                              ----
# ************************************************************************* ----

# Adicionei dois paises: Pais A e Pais B e vou colocar um com diferenca igual
# a zero e o outro com a diferenca negativa para testar

base_original &amp;lt;- 
  data.frame(
    Country = c(&amp;quot;Germany&amp;quot;, &amp;quot;France&amp;quot;, &amp;quot;Vietnam&amp;quot;, &amp;quot;Japan&amp;quot;,
                &amp;quot;Poland&amp;quot;, &amp;quot;Lebanon&amp;quot;, &amp;quot;Australia&amp;quot;, 
                &amp;quot;South Korea&amp;quot;, &amp;quot;Canada&amp;quot;, &amp;quot;Spain&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Peru&amp;quot;, &amp;quot;U.S.&amp;quot;,
                &amp;quot;UK&amp;quot;, &amp;quot;Mexico&amp;quot;, &amp;quot;Chile&amp;quot;, &amp;quot;China&amp;quot;, &amp;quot;India&amp;quot;, 
                &amp;quot;Pais A&amp;quot;, &amp;quot;Pais B&amp;quot;
                ),
    Ages_35_plus = c(0.39, 0.42, 0.49, 0.43, 
                     0.51, 0.57, 0.60,
                     0.45, 0.65, 0.57, 0.57, 0.65, 0.63,
                     0.59, 0.67, 0.75, 0.52, 0.48,
                     0.6, 0.5
                     ),
    Ages_18_34 = c(0.81, 0.83, 0.86, 0.78, 0.86, 0.90, 0.91,
                   0.75, 0.93, 0.85, 0.83, 0.91, 0.89,
                   0.84, 0.90, 0.96, 0.73, 0.69,
                   0.4, 0.5 
                   )
  )

## A base original esta assim:
#        Country Ages_35_plus Ages_18_34
# 1      Germany         0.39       0.81
# 2       France         0.42       0.83
# 3      Vietnam         0.49       0.86
# 4        Japan         0.43       0.78
# 5       Poland         0.51       0.86
# 6      Lebanon         0.57       0.90
# 7    Australia         0.60       0.91
# 8  South Korea         0.45       0.75
# 9       Canada         0.65       0.93
# 10       Spain         0.57       0.85
# 11       Italy         0.57       0.83
# 12        Peru         0.65       0.91
# 13        U.S.         0.63       0.89
# 14          UK         0.59       0.84
# 15      Mexico         0.67       0.90
# 16       Chile         0.75       0.96
# 17       China         0.52       0.73
# 18       India         0.48       0.69
# 19      Pais A         0.60       0.40
# 20      Pais B         0.50       0.50

## A partir disso, precisamos:
## 1) Quebrar o texto da South Korea
## 2) Pegar as diferencas
## 3) Ordenar pelas diferencas
## 4) Colocar o nome dos paises como fatores, para que possamos plotar os paises
##    na ordem certa (maior diferenca para a menor)

# _________________________________________________________________________ ====

## \__Quebrar Texto

base_original_v2 &amp;lt;- 
  base_original %&amp;gt;%
  mutate(
    Country = ifelse(
      Country == &amp;quot;South Korea&amp;quot;, 
      # Verdadeiro:
      &amp;quot;South \n Korea&amp;quot;, 
      # Falso:
      as.character(Country))
  )

# _________________________________________________________________________ ====

## \__Pegar Diferencas

base_diff &amp;lt;- 
  base_original_v2 %&amp;gt;%
  mutate(
    Diferenca = Ages_18_34-Ages_35_plus
  ) %&amp;gt;%
  # Ordenar (isso vai ordenar do menor para o maior, mas tudo bem, pois o ggplot
  # inverte a ordem - coloca do maior para o menor na hora de plotar)
  arrange(Diferenca, desc(Country)) %&amp;gt;%
  # Criar fatores a partir do nomes dos paises ordenados
  mutate(
    Country.fact = factor(Country, levels = unique(Country))
  )

## Com isso, a base fica assim:
#           Country Ages_35_plus Ages_18_34
# 1         Germany         0.39       0.81
# 2          France         0.42       0.83
# 3         Vietnam         0.49       0.86
# 4           Japan         0.43       0.78
# 5          Poland         0.51       0.86
# 6         Lebanon         0.57       0.90
# 7       Australia         0.60       0.91
# 8  South \n Korea         0.45       0.75
# 9          Canada         0.65       0.93
# 10          Spain         0.57       0.85
# 11          Italy         0.57       0.83
# 12           Peru         0.65       0.91
# 13           U.S.         0.63       0.89
# 14             UK         0.59       0.84
# 15         Mexico         0.67       0.90
# 16          Chile         0.75       0.96
# 17          China         0.52       0.73
# 18          India         0.48       0.69
# 19         Pais A         0.60       0.40
# 20         Pais B         0.50       0.50

# _________________________________________________________________________ ====

## \__Agregar por Idade

## Para Plotar as Duas Idades na Mesma linha, temos que modificar a base
## Queremos deixar ela assim (mostrando apenas uma parte, pra nao ficar grande):
#      Country    Age_Group Age_Percent Diferenca
# 1    Germany Ages_35_plus        0.39      0.42
# 2     France Ages_35_plus        0.42      0.41
# 3    Vietnam Ages_35_plus        0.49      0.37
# 4      Japan Ages_35_plus        0.43      0.35
# 5     Poland Ages_35_plus        0.51      0.35
# 6    Lebanon Ages_35_plus        0.57      0.33
# 7  Australia Ages_35_plus        0.60      0.31
# 8    Germany   Ages_18_34        0.81      0.42
# 9     France   Ages_18_34        0.83      0.41
# 10   Vietnam   Ages_18_34        0.86      0.37
# 11     Japan   Ages_18_34        0.78      0.35
# 12    Poland   Ages_18_34        0.86      0.35
# 13   Lebanon   Ages_18_34        0.90      0.33
# 14 Australia   Ages_18_34        0.91      0.31

# Note que o valor da diferenca esta duplicado por grupo
# Lidaremos com isso depois

# Para deixar a base do jeito acima:

base_diff_agregada &amp;lt;- 
  base_diff %&amp;gt;%
  gather(
    # Nome do Grupo 
    key = Age_Group,
    # Nome da Variavel onde os percentuais de Idade entrarao
    value = Age_Percent,
    # Quais variaveis entrarao
    Ages_35_plus, Ages_18_34
  ) %&amp;gt;%
  # Reordenar as variaveis na base
  select(Country, Country.fact, Age_Group, Age_Percent, Diferenca) 

#___________________________________________________________________________####

# ************************************************************************* ----
# Grafico de Pontos                                                         ----
# ************************************************************************* ----
p&amp;lt;-
ggplot(
  data = base_diff_agregada,
  mapping = aes(
    # Eixo Y
    y=Country.fact, 
    # Eixo X
    x=Age_Percent, 
    # Grupos com cores diferentes
    # Se diferenca for zero, participa de um terceiro grupo
    color = ifelse(Diferenca == 0, &amp;quot;zero&amp;quot;, Age_Group))
) + 
  # Plotar as linhas entre pontos, por Pais
  geom_line(
    mapping = aes(group = Country),
    color = cinza,
    size = 2.5
  ) +
  geom_point(
    # tamanho do ponto
    size=4,
    # tipo de icone do ponto. importante ser o numero 19, senao nao tem como
    # plotar as cores para os grupos diferentes
    pch = 19
  ) + 
  # Adicionar os percentuais para cada ponto
  geom_text(
    # Tamanho da Letra
    size = 4,
    # Colocar um pouco abaixo dos pontos
    nudge_y = -0.35,
    mapping = 
      aes(
        label = 
          # Se o pais eh Germany, plotar os numeros com o simbolo %
          ifelse(Country == &amp;quot;Germany&amp;quot;,
                 # Verdadeiro:
                 paste0(as.character(round(Age_Percent*100,0)),&amp;quot;%&amp;quot;),
                 # Falso
                 paste0(as.character(round(Age_Percent*100,0)))
                 ),
        color = ifelse(Diferenca == 0, &amp;quot;zero&amp;quot;, Age_Group)

      )
  ) + 
  # Adicionar &amp;quot;Legenda&amp;quot; acima apenas dos valores do primeiro grupo (germany)
  geom_text(
    # Tamanho da Letra
    size = 4,
    # Negrito
    fontface = &amp;quot;bold&amp;quot;,
    # Colocar um pouco acima dos pontos
    nudge_y = 0.6,
    mapping = 
      aes(
        label = 
          # Se o pais eh Germany, plotar a legenda
          ifelse(Country == &amp;quot;Germany&amp;quot;,
                 # Verdadeiro:
                 ifelse(Age_Group == &amp;quot;Ages_35_plus&amp;quot;,
                        # Verdadeiro:
                        &amp;quot;Ages 35+&amp;quot;,
                        # Falso:
                        &amp;quot;Ages 18-34&amp;quot;
                        ),
                 # Falso
                 &amp;quot;&amp;quot;
          ),
        color = ifelse(Diferenca == 0, &amp;quot;zero&amp;quot;, Age_Group)
      )
  ) +
  # Mudar Cores
  scale_color_manual(
    # Se diferenca for 0, plotar cinza, caso contrario, plotar com as
    # cores por grupo
    values = c(laranja, verde, &amp;quot;gray&amp;quot;)
  ) +
  # Mudar escala eixo X
  scale_x_continuous(
    # Limite de 0 a 1.2 (nao vai de 0 a 1 pq precisamos de um espaco apos o 1,
    # para colocar os valores da diferenca)
    limits = c(0,1.2),
    # Mostrar texto a cada 25%
    breaks = seq(0,1,.25),
    # Mudar escala para percentual
    labels = scales::percent
  ) +
  # Aumentar escala eixo y para caber as legendas
  scale_y_discrete(
    expand = expand_scale(add=c(0.65,1))
  ) +
  # Inserir Retangulo em Branco para delimitar a area onde ficarao os valores
  # das diferencas
  geom_rect(
    mapping = aes(xmin = 1.01, xmax = Inf , ymin = -Inf, ymax = Inf),
    fill = &amp;quot;white&amp;quot;,
    color = &amp;quot;white&amp;quot;
  ) +
  # Inserir Retangulo para as diferencas
  geom_rect(
    mapping = aes(xmin = 1.05, xmax = 1.15 , ymin = -Inf, ymax = Inf),
    fill = fundo_diferencas,
    color = fundo_diferencas
  ) +
  # Inserir Valores das Diferencas
  geom_text(
    # Negrito
    fontface = &amp;quot;bold&amp;quot;,
    # Tamanho da Letra
    size = 4,
    # Cor
    colour = &amp;quot;black&amp;quot;,
    # Posicao
    mapping = 
      aes(
        x = 1.1,
        y = Country,
        label = 
          # Para evitar valor duplicado da diferenca, plotar vazio para o 
          # primeiro grupo e plotar a diferenca apenas para o grupo Ages_18_34.
          ifelse(Age_Group == &amp;quot;Ages_35_plus&amp;quot;,
                 # Verdadeiro
                 &amp;quot;&amp;quot;,
                 #Falso
                 # Se a Diferenca for igual a zero, nao colocar nenhum sinal.
                 # Caso contratio, se for Positiva, colocar sinal + na frente. 
                 # Colocar sinal -, caso contrario
                 ifelse(Diferenca == 0,
                        # Verdadeiro:
                        paste0(as.character(round(Diferenca*100,0))),
                        # Falso
                        ifelse(Diferenca &amp;gt; 0, 
                               # Verdadeiro
                               paste0(&amp;quot;+&amp;quot;,as.character(round(Diferenca*100,0))),
                               # Falso (nao precisa colocar o simbolo -)
                               paste0(as.character(round(Diferenca*100,0)))
                        )
                 )
              )
      )
  ) +
  # Inserir Titulo das Diferencas
  geom_text(
    # Negrito
    fontface = &amp;quot;bold&amp;quot;,
    # Tamanho da Letra
    size = 4,
    # Cor
    colour = &amp;quot;gray&amp;quot;,
    # Colocar um pouco acima dos pontos
    nudge_y = 0.6,
    # Posicao
    mapping = 
      aes(
        x = 1.1,
        y = Country,
        label = 
          # Plotar acima apenas dos valores do primeiro grupo (germany)
          ifelse(Country == &amp;quot;Germany&amp;quot;,
                 # Verdadeiro
                 &amp;quot;DIFF&amp;quot;,
                 #Falso
                 &amp;quot;&amp;quot;
          )
      )
  ) +
  # Titulo e Labels dos Eixos
  labs(
    title = &amp;quot;The social media age gap&amp;quot;,
    subtitle = paste0(
      &amp;quot;Adult internet users or reported smartphone owners who \n&amp;quot;,
      &amp;quot;use social networking sites&amp;quot;
      ),
    x = &amp;quot;&amp;quot;,
    y = &amp;quot;&amp;quot;
    ) +
  # Mudar Fundo, Tamanho das Letras, Etc.
  theme(
    # Mudar Fonte de todos os textos
    text = element_text(color = &amp;quot;#4e4d47&amp;quot;, size = 14),
    
    # Colocar nome dos Paises em Negrito
    axis.text.y = element_text(face = &amp;quot;bold&amp;quot;),
    
    # Separar mais o texto do eixo dos percentuais do grafico
    axis.text.x = element_text(vjust = -0.75),
    
    # Excluir ticks
    axis.ticks = element_blank(),
    
    # Excluir Legenda Original
    legend.position = &amp;quot;none&amp;quot;,
    
    # Fundo Branco
    panel.background = element_blank(),
    
    # Linhas por Country
    panel.grid.major.y = element_line(colour = cinza_claro, size = 1),
    
    # Mudar Fonte Titulo
    plot.title = element_text(face = &amp;quot;bold&amp;quot;, size = 16),
    
    # Mudar Fonte Sub-Titulo e Adicionar Margem
    plot.subtitle = element_text(face = &amp;quot;italic&amp;quot;, size = 12,
                                 margin = margin(b = 0.5, unit = &amp;quot;cm&amp;quot;))
  ) 

p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E o gráfico final:
&lt;img src=&#34;dotplot_final.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Crie um gráfico em cascata (Waterfall Chart) usando ggplot</title>
      <link>/pt/post/waterfall-ggplot/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 -0400</pubDate>
      
      <guid>/pt/post/waterfall-ggplot/</guid>
      <description>&lt;p&gt;Este gráfico foi criado em resposta a &lt;a href=&#34;https://stackoverflow.com/questions/48259930/how-to-create-a-stacked-waterfall-chart-in-r/52565089#52565089&#34; target=&#34;_blank&#34;&gt;essa pergunta no StackOverflow&lt;/a&gt;. O objetivo é replicar o seguinte gráfico:
! [] (waterfall_original.png)&lt;/p&gt;

&lt;p&gt;O truque para plotar gráficos em cascata com &lt;code&gt;ggplot2&lt;/code&gt; é criar um conjunto de dados com os grupos (valores x - estou chamando isso no meu código como &lt;code&gt;x.axis.Var&lt;/code&gt;) no ordem exata que você deseja plotar. Depois disso, você precisa obter os pontos inicial e final das barras para cada categoria (categorias em sua legenda - &lt;code&gt;cat.Var&lt;/code&gt;) dentro dos grupos. Em seguida, crie outro grupo com os * totais por categoria *. Você também precisará de um índice numérico para os grupos manipularem as barras. Finalmente, obtenha uma coluna com o * total por grupo * para os números acima das barras.&lt;/p&gt;

&lt;p&gt;Suponha que seu banco de dados esteja assim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- 
  data.frame(
    x.axis.Var = rep(c(&amp;quot;Widgets&amp;quot;, &amp;quot;Gridgets&amp;quot;, &amp;quot;Groms&amp;quot;, &amp;quot;Wobs&amp;quot;), 3),
    cat.Var = rep(c(&amp;quot;High End&amp;quot;, &amp;quot;Mid Range&amp;quot;, &amp;quot;Low End&amp;quot;), each = 4),
    values = c(600, 500, 300, 200, # high end
               300, 200, 300, 250, # mid range
               100, 80, 200, 150   # low end
               )
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ou,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;   x.axis.Var   cat.Var values
1     Widgets  High End    600
2    Gridgets  High End    500
3       Groms  High End    300
4        Wobs  High End    200
5     Widgets Mid Range    300
6    Gridgets Mid Range    200
7       Groms Mid Range    300
8        Wobs Mid Range    250
9     Widgets   Low End    100
10   Gridgets   Low End     80
11      Groms   Low End    200
12       Wobs   Low End    150
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Siga os passos abaixo para obter um novo banco de dados:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&#39;tidyverse&#39;)

df.tmp &amp;lt;- df %&amp;gt;%
  # \_Set the factor levels in the order you want ----
  mutate(
    x.axis.Var = factor(x.axis.Var,
                        levels = c(&amp;quot;Widgets&amp;quot;, &amp;quot;Gridgets&amp;quot;, &amp;quot;Groms&amp;quot;, &amp;quot;Wobs&amp;quot;)),
    cat.Var = factor(cat.Var,
                        levels = c(&amp;quot;Low End&amp;quot;, &amp;quot;Mid Range&amp;quot;, &amp;quot;High End&amp;quot;))
  ) %&amp;gt;%
  # \_Sort by Group and Category ----
  arrange(x.axis.Var, desc(cat.Var)) %&amp;gt;%
  # \_Get the start and end points of the bars ----
  mutate(end.Bar = cumsum(values),
         start.Bar = c(0, head(end.Bar, -1))) %&amp;gt;%
  # \_Add a new Group called &#39;Total&#39; with total by category ----
  rbind(
    df %&amp;gt;%
      # \___Sum by Categories ----
      group_by(cat.Var) %&amp;gt;% 
      summarise(values = sum(values)) %&amp;gt;%
      # \___Create new Group: &#39;Total&#39; ----
      mutate(
        x.axis.Var = &amp;quot;Total&amp;quot;,
        cat.Var = factor(cat.Var,
                         levels = c(&amp;quot;Low End&amp;quot;, &amp;quot;Mid Range&amp;quot;, &amp;quot;High End&amp;quot;))
      ) %&amp;gt;%
      # \___Sort by Group and Category ----
      arrange(x.axis.Var, desc(cat.Var)) %&amp;gt;%
      # \___Get the start and end points of the bars ----
      mutate(end.Bar = cumsum(values),
             start.Bar = c(0, head(end.Bar, -1))) %&amp;gt;%
      # \___Put variables in the same order ----
      select(names(df),end.Bar,start.Bar)
  ) %&amp;gt;%
  # \_Get numeric index for the groups ----
  mutate(group.id = group_indices(., x.axis.Var)) %&amp;gt;%
  # \_Create new variable with total by group ----
  group_by(x.axis.Var) %&amp;gt;%
  mutate(total.by.x = sum(values)) %&amp;gt;%
  # \_Order the columns ----
  select(x.axis.Var, cat.Var, group.id, start.Bar, values, end.Bar, total.by.x)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Isso produz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x.axis.Var cat.Var   group.id start.Bar values end.Bar total.by.x
   &amp;lt;fct&amp;gt;      &amp;lt;fct&amp;gt;        &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
 1 Widgets    High End         1         0    600     600       1000
 2 Widgets    Mid Range        1       600    300     900       1000
 3 Widgets    Low End          1       900    100    1000       1000
 4 Gridgets   High End         2      1000    500    1500        780
 5 Gridgets   Mid Range        2      1500    200    1700        780
 6 Gridgets   Low End          2      1700     80    1780        780
 7 Groms      High End         3      1780    300    2080        800
 8 Groms      Mid Range        3      2080    300    2380        800
 9 Groms      Low End          3      2380    200    2580        800
10 Wobs       High End         4      2580    200    2780        600
11 Wobs       Mid Range        4      2780    250    3030        600
12 Wobs       Low End          4      3030    150    3180        600
13 Total      High End         5         0   1600    1600       3180
14 Total      Mid Range        5      1600   1050    2650       3180
15 Total      Low End          5      2650    530    3180       3180
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Então, eu posso usar o seguinte código para obter o gráfico que eu quero:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(df.tmp, aes(x = group.id, fill = cat.Var)) + 
  # \_Simple Waterfall Chart ----
  geom_rect(aes(x = group.id,
                xmin = group.id - 0.25, # control bar gap width
                xmax = group.id + 0.25, 
                ymin = end.Bar,
                ymax = start.Bar),
            color=&amp;quot;black&amp;quot;, 
            alpha=0.95) + 
  # \_Lines Between Bars ----
  geom_segment(aes(x=ifelse(group.id == last(group.id),
                            last(group.id),
                            group.id+0.25), 
                   xend=ifelse(group.id == last(group.id),
                               last(group.id),
                               group.id+0.75), 
                   y=ifelse(cat.Var == &amp;quot;Low End&amp;quot;,
                            end.Bar,
                            # these will be removed once we set the y limits
                            max(end.Bar)*2), 
                   yend=ifelse(cat.Var == &amp;quot;Low End&amp;quot;,
                               end.Bar,
                               # these will be removed once we set the y limits
                               max(end.Bar)*2)), 
               colour=&amp;quot;black&amp;quot;) +
  # \_Numbers inside bars (each category) ----
  geom_text(
    mapping = 
      aes(
        label = ifelse(values &amp;lt; 150, 
                       &amp;quot;&amp;quot;,
                       ifelse(nchar(values) == 3,
                              as.character(values),
                              sub(&amp;quot;(.{1})(.*)&amp;quot;, &amp;quot;\\1.\\2&amp;quot;, 
                                  as.character(values)
                              )
                            )
                       ),
        y = rowSums(cbind(start.Bar,values/2))
        ),
    color = &amp;quot;white&amp;quot;,
    fontface = &amp;quot;bold&amp;quot;
    ) + 
  # \_Total for each category above bars ----
  geom_text(
    mapping = 
      aes(
        label = ifelse(cat.Var != &amp;quot;Low End&amp;quot;, 
                       &amp;quot;&amp;quot;,
                       ifelse(nchar(total.by.x) == 3,
                              as.character(total.by.x),
                              sub(&amp;quot;(.{1})(.*)&amp;quot;, &amp;quot;\\1.\\2&amp;quot;, 
                                  as.character(total.by.x)
                                )
                            )
                      ),
        y = end.Bar+200
      ),
    color = &amp;quot;#4e4d47&amp;quot;,
    fontface = &amp;quot;bold&amp;quot;
  ) + 
  # \_Change colors ----
  scale_fill_manual(values=c(&#39;#c8f464&#39;,&#39;#ff6969&#39;,&#39;#55646e&#39;)) +
  # \_Change y axis to same scale as original ----
  scale_y_continuous(
    expand=c(0,0),
    limits = c(0, 3500),
    breaks = seq(0, 3500, 500),
    labels = ifelse(nchar(seq(0, 3500, 500)) &amp;lt; 4,
                    as.character(seq(0, 3500, 500)),
                    sub(&amp;quot;(.{1})(.*)&amp;quot;, &amp;quot;\\1.\\2&amp;quot;, 
                        as.character(seq(0, 3500, 500))
                    )
    )
  ) +
  # \_Add tick marks on x axis to look like the original plot ----
  scale_x_continuous(
    expand=c(0,0),
    limits = c(min(df.tmp$group.id)-0.5,max(df.tmp$group.id)+0.5),
    breaks = c(min(df.tmp$group.id)-0.5,
               unique(df.tmp$group.id), 
               unique(df.tmp$group.id) + 0.5
               ),
    labels = 
      c(&amp;quot;&amp;quot;, 
        as.character(unique(df.tmp$x.axis.Var)), 
        rep(c(&amp;quot;&amp;quot;), length(unique(df.tmp$x.axis.Var)))
      )
  ) +
  # \_Theme options to make it look like the original plot ----
  theme(
    text = element_text(size = 14, color = &amp;quot;#4e4d47&amp;quot;),
    axis.text = element_text(size = 10, color = &amp;quot;#4e4d47&amp;quot;, face = &amp;quot;bold&amp;quot;),
    axis.text.y = element_text(margin = margin(r = 0.3, unit = &amp;quot;cm&amp;quot;)),
    axis.ticks.x =
      element_line(color =
                     c(&amp;quot;black&amp;quot;,
                       rep(NA, length(unique(df.tmp$x.axis.Var))),
                       rep(&amp;quot;black&amp;quot;, length(unique(df.tmp$x.axis.Var))-1)
                     )
                   ),
    axis.line = element_line(colour = &amp;quot;#4e4d47&amp;quot;, size = 0.5),
    axis.ticks.length = unit(.15, &amp;quot;cm&amp;quot;),
    axis.title.x =       element_blank(),
    axis.title.y =       element_blank(),
    panel.background =   element_blank(),
    plot.margin =        unit(c(1, 1, 1, 1), &amp;quot;lines&amp;quot;),
    legend.text =        element_text(size = 10, 
                                      color = &amp;quot;#4e4d47&amp;quot;,
                                      face = &amp;quot;bold&amp;quot;,
                                      margin = margin(l = 0.25, unit = &amp;quot;cm&amp;quot;)
                                      ),
    legend.title =       element_blank()
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E o gráfico final:
&lt;img src=&#34;waterfall_ggplot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Aplicativo Shiny com Modal, Módulos e jQuery</title>
      <link>/pt/project/shiny-modal-modules-jquery/</link>
      <pubDate>Tue, 24 Jul 2018 12:00:00 -0400</pubDate>
      
      <guid>/pt/project/shiny-modal-modules-jquery/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Aplicativo Shiny para comparar imagens</title>
      <link>/pt/project/shiny-compare-images/</link>
      <pubDate>Tue, 24 Jul 2018 10:00:00 -0400</pubDate>
      
      <guid>/pt/project/shiny-compare-images/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Política de Privacidade</title>
      <link>/pt/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>/pt/privacy/</guid>
      <description>&lt;p&gt;Eu valorizo a sua privacidade, por isso não coleto seus dados do usuário. Eu também não uso nenhum software que faça isso (até onde eu saiba).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Impactos dos Fundos Setoriais nas empresas : Novas perspectivas a partir da função dose-resposta</title>
      <link>/pt/publication/dose-response-function/</link>
      <pubDate>Wed, 12 Dec 2012 00:00:00 -0500</pubDate>
      
      <guid>/pt/publication/dose-response-function/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Prêmio CNI de Economia</title>
      <link>/pt/awards/premio-cni/</link>
      <pubDate>Wed, 12 Dec 2012 00:00:00 -0500</pubDate>
      
      <guid>/pt/awards/premio-cni/</guid>
      <description>&lt;p&gt;Emitido pela Confederação Nacional da Indústria (CNI) com o apoio da Associação Brasileira de Centros de Pós-Graduação em Economia (ANPEC).&lt;/p&gt;

&lt;p&gt;Prêmio concedido ao artigo: “Impactos dos Fundos Setoriais nas Empresas: Novas Perspectivas a partir da Função Dose-Resposta”.&lt;/p&gt;

&lt;p&gt;Clique &lt;a href=&#34;http://arquivos.portaldaindustria.com.br/app/conteudo_18/2012/04/14/241/20121211181532663505i.pdf&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt; para obter o artigo completo, e &lt;a href=&#34;http://admin.cni.org.br/portal/data/pages/FF80808121B560FA0121B59D0BB81B77.htm&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt; para mais informações sobre o prêmio.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Demanda por ticket aéreo na economia brasileira: uma análise de co-integração.</title>
      <link>/pt/publication/airticket/</link>
      <pubDate>Fri, 01 Jul 2011 00:00:00 -0400</pubDate>
      
      <guid>/pt/publication/airticket/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Políticas anticíclicas na indústria automobilística: uma análise de co-integração dos impactos da redução do IPI sobre as vendas de veículos.</title>
      <link>/pt/publication/vehicle-sales/</link>
      <pubDate>Fri, 01 Oct 2010 00:00:00 -0400</pubDate>
      
      <guid>/pt/publication/vehicle-sales/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
