[{"authors":["G Varela-Alvarenga"],"categories":null,"content":" Seção 1: Introdução Em março de 2019, o Projeto de Mapeamento Anual da Cobertura e Uso do Solo do Brasil (MapBiomas) (http://mapbiomas.org/) lançou o banco de dados Mapbiomas v.3.1 sobre uso e cobertura da terra para o período de 1985 a 2017.\nEste conjunto de dados contém informações sobre a área total (em hectares) de formações florestais, formações naturais não-florestais, agricultura, áreas sem vegetação e corpos d\u0026rsquo;água - informações detalhadas sobre estas formações e suas subdivisões podem ser encontradas aqui.\nE ainda que o site forneça ferramentas para qualquer um criar seus próprios mapas, decidi criar meu próprio mapa animado usando R e os pacotes ggplot2 e gifski porque queria ver a porcentagem de uma área da cidade que é coberta por vegetação nativa. Eu também estou usando o pacote brazilmaps para traçar o mapa do Brasil.\nEu queria me concentrar apenas nos dados da Formação Florestal Natural e ver como sua área total evoluiu desde 1985.\nEste tutorial tem 3 seções, além desta introdução. A segunda seção é apenas sobre os pacotes e fontes que eu usei e como baixar essas fontes. Na Seção 3, examino o conjunto de dados e falo sobre suas variáveis e suas definições. Eu também passo por etapas de importar o conjunto de dados e fazer algumas manipulações de dados para obter as informações que desejo. A seção 4 fornece o código para o mapa final.\nVocê pode baixar o arquivo .R com o código completo do meu GitHub.\nSeção 2: Pacotes Começarei examinando as fontes que usei e como instalá-las. Eu uso o Windows, então não sei se os mesmos passos se aplicam a outros sistemas (desculpe usuários Mac e Unix).\nEstou usando Lato, uma família de fontes de código aberto. Então, certifique-se de baixar e instalar a fonte Lato antes de começar ou você pode deixar R usar a fonte padrão do sistema - você não terá que alterar o código, você receberá algumas mensagens de aviso, mas R ainda irá traçar o mapa .\nVocê pode baixá-la aqui.\nA primeira coisa que faço é ter certeza de que R pode usar essa fonte, então vou usar o pacote extrafont para isso. Se é a primeira vez que você usa essas fontes, você terá que executar o comando font_import () (isso pode demorar um pouco dependendo do número de fontes instaladas que você possui, o bom é que você terá que executar este comando apenas uma vez).\n# ************************************************************************* ---- # Pacote extrafont ---- # ************************************************************************* ---- #install.packages(\u0026quot;extrafont\u0026quot;) library(\u0026quot;extrafont\u0026quot;) # ************************************************************************* ---- # Importar Fonte ---- # ************************************************************************* ---- # Instale a fonte Lato # Rode font_import apenas uma vez: # font_import() # Verifique se Lato foi incluida fonts()[grep(\u0026quot;Lato\u0026quot;, fonts())] # Registre as fontes no R loadfonts(device = \u0026quot;win\u0026quot;) # ************************************************************************* ---- # Outros Pacotes ---- # ************************************************************************* ---- #install.packages(\u0026quot;openxlsx\u0026quot;) #install.packages(\u0026quot;tidyverse\u0026quot;) #install.packages(\u0026quot;brazilmaps\u0026quot;) #install.packages(\u0026quot;gifski\u0026quot;) library(\u0026quot;openxlsx\u0026quot;) library(\u0026quot;tidyverse\u0026quot;) library(\u0026quot;brazilmaps\u0026quot;) library(\u0026quot;gifski\u0026quot;)  Section 3: Os Dados Dando os devidos créditos Os dados do Projeto MapBiomas são públicos, abertos e gratuitos através da simples referência da fonte:\n\u0026ldquo;Projeto MapBiomas – Coleção 3.1 da Série Anual de Mapas de Cobertura e Uso de Solo do Brasil, acessado em 24/04/2019 através do link:(http://mapbiomas.org/pages/estatisticas)\u0026quot;\n\u0026ldquo;Projeto MapBiomas - é uma iniciativa multi-institucional para gerar mapas anuais de cobertura e uso do solo a partir de processos de classificação automática aplicada a imagens de satélite. A descrição completa do projeto encontra-se em http://mapbiomas.org\u0026ldquo;\nTambém estou usando dados sobre a área das cidades no Brasil do IBGE (Instituto Brasileiro de Geografia e Estatística). Devido às mudanças no tamanho das cidades ao longo dos anos, decidi usar os dados de 2016. Eu estava obtendo alguns resultados incorretos usando dados de 2017 ou 2018, como cidades com mais de 100% de sua área coberta por vegetação nativa. Claramente, essas cidades foram divididas, mas isso não foi contabilizado no conjunto de dados do MapBiomas. Não foram observadas cidades com mais de 100% de sua área coberta por vegetação nativa ao utilizar dados de 2016.\nO código abaixo importa os conjuntos de dados para R, mas se você quiser, pode baixar os arquivos xlsx dos sites oficiais clicando em aqui para o banco de dados do MapBiomas e aqui para os dados do IBGE.\nPara manter meu código, também estou fazendo o upload dos bancos de dados originais para o meu repositório GitHub e esses são os dados que vou usar no meu código abaixo.\nDicionário de Dados O arquivo xlsx do MapBiomas possui as seguintes planilhas:\n INSTRUCTIONS; LAND COVER - BIOMAS e UF; LAND COVER - MUN_UF; CONSULTA BIOMA-UF; e CONSULTA MUN-UF.  Usarei a planilha LAND COVER - MUN_UF. As variáveis dessa planilha são:\n   Variável Classe Descrição     COD_ESTADO numeric identificador do Estado   estado character nome do Estado   CODIBGE numeric identificador do municipio   municipio character nome do municipio   cod.classe numeric identificador do tipo de classe de cobertura terrestre   nivel1 character classe nível 1   nivel2 character classe nível 2   nivel3 character classe nível 3   1985 numeric área coberta em hectares(ha) em 1985   \u0026hellip; \u0026hellip; \u0026hellip;   2017 numeric área coberta em hectares(ha) em 2017    O arquivo xlsx do IBGE possui as seguintes planilhas:\n AR_BR_MUN_2016; AR_BR_UF_2016; AR_BR_RG_2016; e AR_BR_2016.  Usarei a planilha AR_BR_MUN_2016. As variáveis dessa planilha são:\nThe variables in IBGE\u0026rsquo;s AR_BR_MUN_2016 data set are:\n   Variável Classe Descrição     ID numeric ID   CD_GCUF character identificador do Estado   NM_UF character nome do Estado   NM_UF_SIGLA character UF   CD_GCMUN character identificador do municipio   NM_MUN_2016 character nome do municipio   AR_MUN_2016 numeric área em km quadrados    # ************************************************************************* ---- # Importar os Dados ---- # ************************************************************************* ---- # Mudar formato dos numeros options(scipen=10) # Caminho para o Arquivo no GitHub file_path_forest_area = paste0( \u0026quot;https://github.com/gu-stat/forest-area/blob/master/\u0026quot;, \u0026quot;data/Dados_Cobertura_MapBiomas_3.1_Biomas-UF-Municipios_%20SITE_UNPROTECTED.xlsx\u0026quot;, \u0026quot;?raw=true\u0026quot;) file_path_city_area = paste0( \u0026quot;https://github.com/gu-stat/forest-area/blob/master/\u0026quot;, \u0026quot;data/AR_BR_RG_UF_MUN_2016.xlsx\u0026quot;, \u0026quot;?raw=true\u0026quot;) # Importacao df.original \u0026lt;- openxlsx::read.xlsx(file_path_forest_area, sheet = \u0026quot;LAND COVER - MUN_UF\u0026quot;) df.city.area \u0026lt;- openxlsx::read.xlsx(file_path_city_area, sheet = \u0026quot;AR_BR_MUN_2016\u0026quot;) ## \\__ Dados para Criar Mapa por Cidade ---- brazil.map \u0026lt;- get_brmap(geo = \u0026quot;City\u0026quot;, class = \u0026quot;sf\u0026quot;)  Manipulação de dados # ************************************************************************* ---- # Manipulacao dos Dados ---- # ************************************************************************* ---- ## \\__ Transforma Codigo da Cidade em Numerico ---- df.city.area2 \u0026lt;- df.city.area %\u0026gt;% dplyr::mutate(CODIBGE = as.numeric(CD_GCMUN)) %\u0026gt;% dplyr::select(CODIBGE, AR_MUN_2016) ## \\__ Dados de Area de Cobertura de Florestas Natuais ---- df.nat.forest \u0026lt;- df.original %\u0026gt;% filter(nivel2 == \u0026quot;Floresta Natural\u0026quot;) %\u0026gt;% select(COD_ESTADO, estado, CODIBGE, nivel2, nivel3, paste0(seq(1985, 2017)) ) %\u0026gt;% # SOMA OS DIFERENTES SUB-GRUPOS DE Floresta Natural group_by(COD_ESTADO, estado, CODIBGE) %\u0026gt;% summarize_at(vars(-nivel2,-nivel3),sum) %\u0026gt;% ungroup() ## \\__ Juntar com Dados de Area da Cidade ---- df.nat.forest.AREA \u0026lt;- df.nat.forest %\u0026gt;% # ADICIONA AREA DE CADA CIDADE NA BASE COM DADOS DE VEGETACAO dplyr::left_join(x = ., y = df.city.area2, by = \u0026quot;CODIBGE\u0026quot;) %\u0026gt;% # CRIA PERCENTUAIS ## FAZ x/100 PARA TRANSFORMAR DE HECTARES PARA KM2 dplyr::mutate_at(.vars=vars(paste0(seq(1985,2017))), .fun = function(x) round(100*((x/100)/.$AR_MUN_2016),3) ) # VERIFICA SE ALGUM MUNICIPIO TEM MAIS DE 100% greater.1 \u0026lt;- NULL for (i in 1985:2017) { greater.1 \u0026lt;- append(greater.1, which(df.nat.forest.AREA[,paste0(i)] \u0026gt;= 100)) } greater.1 \u0026lt;- greater.1 %\u0026gt;% unlist() %\u0026gt;% unique() ## \\__ Cria os limites de percentuais ---- df.nat.forest.AREA \u0026lt;- df.nat.forest.AREA %\u0026gt;% dplyr::mutate_at(.vars=vars(paste0(seq(1985,2017))), .fun = function(x) cut(x,breaks=c(-Inf, 0, 1, seq(0, 100, 10)[-1])) )  Seção 4: O Mapa # ************************************************************************* ---- # Mapa ---- # ************************************************************************* ---- ## \\__ Funcao que junta os dados de vegetacao com os de posicao das cidades ---- create.map.df \u0026lt;- function(DATA){ map \u0026lt;- join_data(map = brazil.map, data = DATA, by = c(\u0026quot;City\u0026quot; = \u0026quot;CODIBGE\u0026quot;)) map.ggplot \u0026lt;- as(map, \u0026quot;Spatial\u0026quot;) map.ggplot@data$id = row.names(map.ggplot@data) df.map.ggplot \u0026lt;- suppressMessages(ggplot2::fortify(map.ggplot)) df.map.ggplot \u0026lt;- dplyr::left_join(df.map.ggplot, map.ggplot@data, by = \u0026quot;id\u0026quot;) return(df.map.ggplot) } ## \\____ Base de dados Para criar o Mapa ---- df.map.ggplot \u0026lt;- create.map.df(df.nat.forest.AREA) ## \\__ Map Colors ---- # USEI https://gka.github.io/palettes PARA OBTER UMA ESCALA DE CORES # COM 12 INTERVALOS (MESMO NUMERO DE INTERVALOS DE # cut(x,breaks=c(-Inf, 0, 1, seq(0, 100, 10)[-1])) ) # QUE VAI DE white ATE darkgreen QUE EH APROPRIADA PARA PESSOAS COM # VARIOS TIPOS DE DALTONISMO map.colors \u0026lt;- c('#ffffff','#eaf1e7','#d4e2cf','#bfd4b8','#abc5a1','#96b78a', '#81a974','#6c9b5f','#588d4a','#428034','#28711d','#006400') ### \\__ Rotulos para a Legenda ---- map.labels \u0026lt;- c(\u0026quot;0\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;10%\u0026quot;, rep(\u0026quot;\u0026quot;,3), \u0026quot;50%\u0026quot;, rep(\u0026quot;\u0026quot;,3), \u0026quot;90%\u0026quot;, \u0026quot;\u0026quot;) ## \\__ Criar Tema para o Mapa ---- map.theme \u0026lt;- theme( text = element_text(size = 12, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;), axis.text = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank(), plot.background = element_rect(fill = \u0026quot;#3a3935\u0026quot;, color = NA), panel.background = element_rect(fill = \u0026quot;#3a3935\u0026quot;, color = NA), panel.grid = element_blank(), plot.margin = margin(t = 0.25,r = 0.25,b = 0.25,l = 0.25,unit = \u0026quot;cm\u0026quot;), plot.title = element_text(margin = margin(t = 0.25, unit = \u0026quot;cm\u0026quot;)), plot.caption = element_text(size = 10), legend.background = element_rect(fill = \u0026quot;#3a3935\u0026quot;, color = \u0026quot;#3a3935\u0026quot;), legend.text = element_text(size = 11), legend.title = element_text(size = 12), legend.position = \u0026quot;left\u0026quot;, legend.key = element_rect(color = \u0026quot;transparent\u0026quot;), legend.key.size = unit(0, units = \u0026quot;mm\u0026quot;), legend.key.width = unit(2, units = \u0026quot;mm\u0026quot;) ) ## \\__ Plotar Mapa ---- ### \\____ Funcao para o GIF ---- plot.map.forest \u0026lt;- function(){ for (i in 1985:2017) { lost.area.year.km2 \u0026lt;- round( sum(-(df.nat.forest %\u0026gt;% summarize_at(paste0(i),sum)/100), df.nat.forest %\u0026gt;% summarize_at(paste0(1985),sum)/100) ,2 ) lost.area.year.mi2 \u0026lt;- round(lost.area.year.km2/2.59, 2) map.forest \u0026lt;- # MAPA ggplot(mapping = aes(x = long, y = lat, group = group)) + # MAPA COM LINHAS DA CIDADE TRANSPARENTES geom_polygon( data = df.map.ggplot, aes_string(fill = paste0(\u0026quot;X\u0026quot;,i)), color = \u0026quot;transparent\u0026quot; ) + # LEGENDA scale_fill_manual( values = map.colors, drop = FALSE, na.value = \u0026quot;black\u0026quot;, na.translate = FALSE, name = \u0026quot;\u0026quot;, label = map.labels, guide = guide_legend( direction = \u0026quot;vertical\u0026quot;, ncol = 1, reverse = TRUE, label.vjust = 2.5 ) ) + # LIMITES DO MAPA xlim(range(df.map.ggplot$long)) + ylim(range(df.map.ggplot$lat)) + coord_map() + # ADICIONAR TITULO E CAPTIONS labs( title = \u0026quot;Percentual da Área da Cidade coberta por Vegetação Nativa, Brasil.\u0026quot;, caption = paste0(\u0026quot;Mapa: Gustavo Varela-Alvarenga - ogustavo.com/pt \\n \\n \u0026quot;, \u0026quot;Dados: MapBiomas v.3.1 - mapbiomas.org \u0026amp; \u0026quot;, \u0026quot;IBGE - www.ibge.gov.br \u0026quot;) ) + # ADICIONAR TEMA map.theme + # ADICIONAR ANNOTATIONS ## PALAVRA ANO annotate( geom = \u0026quot;text\u0026quot;, x = -44.1, y = 2.4, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;ano\u0026quot;, angle = 90 ) + ## VALOR DO ANO annotate( geom = \u0026quot;text\u0026quot;, x = -40, y = 2.5, size = 10, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = paste0(i) ) + ## TITULO - TABELA A ESQUERDA annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -26, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = paste0(\u0026quot;Área Total de Vegetação \\n\u0026quot;, \u0026quot;Nativa Perdida Desde 1985\u0026quot;) ) + ## LINHA ABAIXO TITULO annotate( geom = \u0026quot;segment\u0026quot;, x = -64.5, xend = -72.5, y = -28, yend = -28, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## VALORES EM KMs QUADRADOS COM . PARA MARCAR OS MILHARES annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = ifelse(lost.area.year.km2 == 0, \u0026quot;0\u0026quot;, paste0(prettyNum(round(lost.area.year.km2, 0), big.mark=\u0026quot;.\u0026quot;, decimal.mark = \u0026quot;,\u0026quot;), \u0026quot; km2\u0026quot;) ) ) + ## VALORES EM MILHAS QUADRADAS COM , PARA MARCAR OS MILHARES annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = ifelse(lost.area.year.mi2 == 0, \u0026quot;0\u0026quot;, paste0(prettyNum(round(lost.area.year.mi2, 0), big.mark=\u0026quot;,\u0026quot;), \u0026quot; milhas2\u0026quot;) ) ) + ## LINHA ABAIXO TABELA annotate( geom = \u0026quot;segment\u0026quot;, x = -64.5, xend = -72.5, y = -32, yend = -32, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## TITULO - TABELA A DIREITA annotate( geom = \u0026quot;text\u0026quot;, x = -39, y = -26, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = paste0(\u0026quot;Área Perdida em \\n\u0026quot;, \u0026quot;% da Área do(a)\u0026quot;) ) + ## LINHA ABAIXO TITULO annotate( geom = \u0026quot;segment\u0026quot;, x = -35, xend = -43, y = -28, yend = -28, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## ADICIONAR PALAVRA TEXAS annotate( geom = \u0026quot;text\u0026quot;, x = -41, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;Texas : \u0026quot; ) + ## ADICIONAR PERCENTUAL PARA TEXAS annotate( geom = \u0026quot;text\u0026quot;, x = -34, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 1, label = ifelse( lost.area.year.km2 == 0, \u0026quot;0%\u0026quot;, paste0(round(lost.area.year.km2/696241, 2) * 100, \u0026quot;%\u0026quot;) ) ) + ## ADICIONAR PALAVRA ALEMANHA annotate( geom = \u0026quot;text\u0026quot;, x = -41, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;Alemanha : \u0026quot; ) + ## ADICIONAR PERCENTUAL PARA ALEMANHA annotate( geom = \u0026quot;text\u0026quot;, x = -34, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 1, label = ifelse( lost.area.year.km2 == 0, \u0026quot;0%\u0026quot;, paste0(round(lost.area.year.km2/357386, 2) * 100, \u0026quot;%\u0026quot;) ) ) + ## LINHA ABAIXO DA TABELA annotate( geom = \u0026quot;segment\u0026quot;, x = -35, xend = -43, y = -32, yend = -32, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) print(map.forest) } }  ### \\____ Criar GIF ---- ### O comando abaixo salvara um arquivo gif de nome forest_animation_pt-br.gif ### no seu working directory gif_file \u0026lt;- gifski::save_gif( expr = plot.map.forest(), gif_file = \u0026quot;forest_animation_pt-br.gif\u0026quot;, delay = 0.75, width = 738, height = 788, res = 100 ) utils::browseURL(gif_file)  Se você quiser, você pode usar o código abaixo para obter imagens estáticas de alta qualidade dos mapas. Esteja ciente de que isso salvará os gráficos em seu diretório de trabalho.\n### \\____ Criar Mapas Estaticos ---- #install.packages(\u0026quot;Cairo\u0026quot;) library(\u0026quot;Cairo\u0026quot;) for (i in 1985:2017) { lost.area.year.km2 \u0026lt;- round( sum(-(df.nat.forest %\u0026gt;% summarize_at(paste0(i),sum)/100), df.nat.forest %\u0026gt;% summarize_at(paste0(1985),sum)/100) ,2 ) lost.area.year.mi2 \u0026lt;- round(lost.area.year.km2/2.59, 2) map.forest \u0026lt;- # MAPA ggplot(mapping = aes(x = long, y = lat, group = group)) + # MAPA COM LINHAS DA CIDADE TRANSPARENTES geom_polygon( data = df.map.ggplot, aes_string(fill = paste0(\u0026quot;X\u0026quot;,i)), color = \u0026quot;transparent\u0026quot; ) + # LEGENDA scale_fill_manual( values = map.colors, drop = FALSE, na.value = \u0026quot;black\u0026quot;, na.translate = FALSE, name = \u0026quot;\u0026quot;, label = map.labels, guide = guide_legend( direction = \u0026quot;vertical\u0026quot;, ncol = 1, reverse = TRUE, label.vjust = 2.5 ) ) + # LIMITES DO MAPA xlim(range(df.map.ggplot$long)) + ylim(range(df.map.ggplot$lat)) + coord_map() + # ADICIONAR TITULO E CAPTIONS labs( title = \u0026quot;Percentual da Área da Cidade coberta por Vegetação Nativa, Brasil.\u0026quot;, caption = paste0(\u0026quot;Mapa: Gustavo Varela-Alvarenga - ogustavo.com/pt \\n \\n \u0026quot;, \u0026quot;Dados: MapBiomas v.3.1 - mapbiomas.org \u0026amp; \u0026quot;, \u0026quot;IBGE - www.ibge.gov.br \u0026quot;) ) + # ADICIONAR TEMA map.theme + # ADICIONAR ANNOTATIONS ## PALAVRA ANO annotate( geom = \u0026quot;text\u0026quot;, x = -44.1, y = 2.4, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;ano\u0026quot;, angle = 90 ) + ## VALOR DO ANO annotate( geom = \u0026quot;text\u0026quot;, x = -40, y = 2.5, size = 10, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = paste0(i) ) + ## TITULO - TABELA A ESQUERDA annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -26, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = paste0(\u0026quot;Área Total de Vegetação \\n\u0026quot;, \u0026quot;Nativa Perdida Desde 1985\u0026quot;) ) + ## LINHA ABAIXO TITULO annotate( geom = \u0026quot;segment\u0026quot;, x = -64.5, xend = -72.5, y = -28, yend = -28, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## VALORES EM KMs QUADRADOS COM . PARA MARCAR OS MILHARES annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = ifelse(lost.area.year.km2 == 0, \u0026quot;0\u0026quot;, paste0(prettyNum(round(lost.area.year.km2, 0), big.mark=\u0026quot;.\u0026quot;, decimal.mark = \u0026quot;,\u0026quot;), \u0026quot; km2\u0026quot;) ) ) + ## VALORES EM MILHAS QUADRADAS COM , PARA MARCAR OS MILHARES annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = ifelse(lost.area.year.mi2 == 0, \u0026quot;0\u0026quot;, paste0(prettyNum(round(lost.area.year.mi2, 0), big.mark=\u0026quot;,\u0026quot;), \u0026quot; milhas2\u0026quot;) ) ) + ## LINHA ABAIXO TABELA annotate( geom = \u0026quot;segment\u0026quot;, x = -64.5, xend = -72.5, y = -32, yend = -32, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## TITULO - TABELA A DIREITA annotate( geom = \u0026quot;text\u0026quot;, x = -39, y = -26, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = paste0(\u0026quot;Área Perdida em \\n\u0026quot;, \u0026quot;% da Área do(a)\u0026quot;) ) + ## LINHA ABAIXO TITULO annotate( geom = \u0026quot;segment\u0026quot;, x = -35, xend = -43, y = -28, yend = -28, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## ADICIONAR PALAVRA TEXAS annotate( geom = \u0026quot;text\u0026quot;, x = -41, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;Texas : \u0026quot; ) + ## ADICIONAR PERCENTUAL PARA TEXAS annotate( geom = \u0026quot;text\u0026quot;, x = -34, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 1, label = ifelse( lost.area.year.km2 == 0, \u0026quot;0%\u0026quot;, paste0(round(lost.area.year.km2/696241, 2) * 100, \u0026quot;%\u0026quot;) ) ) + ## ADICIONAR PALAVRA ALEMANHA annotate( geom = \u0026quot;text\u0026quot;, x = -41, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;Alemanha : \u0026quot; ) + ## ADICIONAR PERCENTUAL PARA ALEMANHA annotate( geom = \u0026quot;text\u0026quot;, x = -34, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 1, label = ifelse( lost.area.year.km2 == 0, \u0026quot;0%\u0026quot;, paste0(round(lost.area.year.km2/357386, 2) * 100, \u0026quot;%\u0026quot;) ) ) + ## LINHA ABAIXO DA TABELA annotate( geom = \u0026quot;segment\u0026quot;, x = -35, xend = -43, y = -32, yend = -32, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) ### Observe que o comando abaixo ira salvar varios arquivos ### png com nome Y*_pt-br.png, onde * eh o ano, no seu ### working directory ggsave( paste0(\u0026quot;Y\u0026quot;,i,\u0026quot;_pt-br.png\u0026quot;), device=\u0026quot;png\u0026quot;, type=\u0026quot;cairo\u0026quot;, width = 7, height = 7 ) }  ","date":1556251200,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1556337600,"objectID":"2886faab99e44b2515f195bfacb114a4","permalink":"/pt/post/forest-map/","publishdate":"2019-04-26T00:00:00-04:00","relpermalink":"/pt/post/forest-map/","section":"post","summary":"Crie um Mapa no R com ggplot e transforme-o em um gif","tags":["ggplot2","map","gif","R"],"title":"Crie um Mapa no R com ggplot e transforme-o em um gif","type":"post"},{"authors":["G Varela-Alvarenga"],"categories":null,"content":"Uma amiga perguntou se eu poderia replicar o seguinte gráfico: Para fazer isso, eu precisava recriar os dados primeiro. Eu fiz isso como se os dados estivessem organizados da seguinte forma:\n# Country Ages_35_plus Ages_18_34 # 1 Germany 0.39 0.81 # 2 France 0.42 0.83 # 3 Vietnam 0.49 0.86 # 4 Japan 0.43 0.78 # 5 Poland 0.51 0.86 # 6 Lebanon 0.57 0.90 # 7 Australia 0.60 0.91 # 8 South Korea 0.45 0.75 # 9 Canada 0.65 0.93 # 10 Spain 0.57 0.85 # 11 Italy 0.57 0.83 # 12 Peru 0.65 0.91 # 13 U.S. 0.63 0.89 # 14 UK 0.59 0.84 # 15 Mexico 0.67 0.90 # 16 Chile 0.75 0.96 # 17 China 0.52 0.73 # 18 India 0.48 0.69 # 19 Pais A 0.60 0.40 # 20 Pais B 0.50 0.50  Eu incluí Pais A e Pais B para que eu tenha um país com uma diferença negativa, e outro com uma diferença de zero.\nDado isso, eu precisava fazer 4 coisas antes de começar:\n1) Insirir uma quebra de linha em South Korea\n2) Calcular as diferenças de idade\n3) Classificar os países pelas diferenças de idade\n4) Definir os nomes dos países como fatores para que possamos plotá-los na ordem correta.\n# ************************************************************************* ---- # Pacotes ---- # ************************************************************************* ---- #install.packages(\u0026quot;tidyverse\u0026quot;) library(\u0026quot;tidyverse\u0026quot;) # ************************************************************************* ---- # Cores - A partir do Original ---- # ************************************************************************* ---- laranja \u0026lt;- \u0026quot;#e8ab5f\u0026quot; verde \u0026lt;- \u0026quot;#a1ad62\u0026quot; fundo_diferencas \u0026lt;- \u0026quot;#eef0e2\u0026quot; cinza \u0026lt;- \u0026quot;#bbbbbb\u0026quot; cinza_claro \u0026lt;- \u0026quot;#f4f4f4\u0026quot; # ************************************************************************* ---- # Dados para Grafico de Pontos ---- # ************************************************************************* ---- # Adicionei dois paises: Pais A e Pais B e vou colocar um com diferenca igual # a zero e o outro com a diferenca negativa para testar base_original \u0026lt;- data.frame( Country = c(\u0026quot;Germany\u0026quot;, \u0026quot;France\u0026quot;, \u0026quot;Vietnam\u0026quot;, \u0026quot;Japan\u0026quot;, \u0026quot;Poland\u0026quot;, \u0026quot;Lebanon\u0026quot;, \u0026quot;Australia\u0026quot;, \u0026quot;South Korea\u0026quot;, \u0026quot;Canada\u0026quot;, \u0026quot;Spain\u0026quot;, \u0026quot;Italy\u0026quot;, \u0026quot;Peru\u0026quot;, \u0026quot;U.S.\u0026quot;, \u0026quot;UK\u0026quot;, \u0026quot;Mexico\u0026quot;, \u0026quot;Chile\u0026quot;, \u0026quot;China\u0026quot;, \u0026quot;India\u0026quot;, \u0026quot;Pais A\u0026quot;, \u0026quot;Pais B\u0026quot; ), Ages_35_plus = c(0.39, 0.42, 0.49, 0.43, 0.51, 0.57, 0.60, 0.45, 0.65, 0.57, 0.57, 0.65, 0.63, 0.59, 0.67, 0.75, 0.52, 0.48, 0.6, 0.5 ), Ages_18_34 = c(0.81, 0.83, 0.86, 0.78, 0.86, 0.90, 0.91, 0.75, 0.93, 0.85, 0.83, 0.91, 0.89, 0.84, 0.90, 0.96, 0.73, 0.69, 0.4, 0.5 ) ) ## A base original esta assim: # Country Ages_35_plus Ages_18_34 # 1 Germany 0.39 0.81 # 2 France 0.42 0.83 # 3 Vietnam 0.49 0.86 # 4 Japan 0.43 0.78 # 5 Poland 0.51 0.86 # 6 Lebanon 0.57 0.90 # 7 Australia 0.60 0.91 # 8 South Korea 0.45 0.75 # 9 Canada 0.65 0.93 # 10 Spain 0.57 0.85 # 11 Italy 0.57 0.83 # 12 Peru 0.65 0.91 # 13 U.S. 0.63 0.89 # 14 UK 0.59 0.84 # 15 Mexico 0.67 0.90 # 16 Chile 0.75 0.96 # 17 China 0.52 0.73 # 18 India 0.48 0.69 # 19 Pais A 0.60 0.40 # 20 Pais B 0.50 0.50 ## A partir disso, precisamos: ## 1) Quebrar o texto da South Korea ## 2) Pegar as diferencas ## 3) Ordenar pelas diferencas ## 4) Colocar o nome dos paises como fatores, para que possamos plotar os paises ## na ordem certa (maior diferenca para a menor) # _________________________________________________________________________ ==== ## \\__Quebrar Texto base_original_v2 \u0026lt;- base_original %\u0026gt;% mutate( Country = ifelse( Country == \u0026quot;South Korea\u0026quot;, # Verdadeiro: \u0026quot;South \\n Korea\u0026quot;, # Falso: as.character(Country)) ) # _________________________________________________________________________ ==== ## \\__Pegar Diferencas base_diff \u0026lt;- base_original_v2 %\u0026gt;% mutate( Diferenca = Ages_18_34-Ages_35_plus ) %\u0026gt;% # Ordenar (isso vai ordenar do menor para o maior, mas tudo bem, pois o ggplot # inverte a ordem - coloca do maior para o menor na hora de plotar) arrange(Diferenca, desc(Country)) %\u0026gt;% # Criar fatores a partir do nomes dos paises ordenados mutate( Country.fact = factor(Country, levels = unique(Country)) ) ## Com isso, a base fica assim: # Country Ages_35_plus Ages_18_34 # 1 Germany 0.39 0.81 # 2 France 0.42 0.83 # 3 Vietnam 0.49 0.86 # 4 Japan 0.43 0.78 # 5 Poland 0.51 0.86 # 6 Lebanon 0.57 0.90 # 7 Australia 0.60 0.91 # 8 South \\n Korea 0.45 0.75 # 9 Canada 0.65 0.93 # 10 Spain 0.57 0.85 # 11 Italy 0.57 0.83 # 12 Peru 0.65 0.91 # 13 U.S. 0.63 0.89 # 14 UK 0.59 0.84 # 15 Mexico 0.67 0.90 # 16 Chile 0.75 0.96 # 17 China 0.52 0.73 # 18 India 0.48 0.69 # 19 Pais A 0.60 0.40 # 20 Pais B 0.50 0.50 # _________________________________________________________________________ ==== ## \\__Agregar por Idade ## Para Plotar as Duas Idades na Mesma linha, temos que modificar a base ## Queremos deixar ela assim (mostrando apenas uma parte, pra nao ficar grande): # Country Age_Group Age_Percent Diferenca # 1 Germany Ages_35_plus 0.39 0.42 # 2 France Ages_35_plus 0.42 0.41 # 3 Vietnam Ages_35_plus 0.49 0.37 # 4 Japan Ages_35_plus 0.43 0.35 # 5 Poland Ages_35_plus 0.51 0.35 # 6 Lebanon Ages_35_plus 0.57 0.33 # 7 Australia Ages_35_plus 0.60 0.31 # 8 Germany Ages_18_34 0.81 0.42 # 9 France Ages_18_34 0.83 0.41 # 10 Vietnam Ages_18_34 0.86 0.37 # 11 Japan Ages_18_34 0.78 0.35 # 12 Poland Ages_18_34 0.86 0.35 # 13 Lebanon Ages_18_34 0.90 0.33 # 14 Australia Ages_18_34 0.91 0.31 # Note que o valor da diferenca esta duplicado por grupo # Lidaremos com isso depois # Para deixar a base do jeito acima: base_diff_agregada \u0026lt;- base_diff %\u0026gt;% gather( # Nome do Grupo key = Age_Group, # Nome da Variavel onde os percentuais de Idade entrarao value = Age_Percent, # Quais variaveis entrarao Ages_35_plus, Ages_18_34 ) %\u0026gt;% # Reordenar as variaveis na base select(Country, Country.fact, Age_Group, Age_Percent, Diferenca) #___________________________________________________________________________#### # ************************************************************************* ---- # Grafico de Pontos ---- # ************************************************************************* ---- p\u0026lt;- ggplot( data = base_diff_agregada, mapping = aes( # Eixo Y y=Country.fact, # Eixo X x=Age_Percent, # Grupos com cores diferentes # Se diferenca for zero, participa de um terceiro grupo color = ifelse(Diferenca == 0, \u0026quot;zero\u0026quot;, Age_Group)) ) + # Plotar as linhas entre pontos, por Pais geom_line( mapping = aes(group = Country), color = cinza, size = 2.5 ) + geom_point( # tamanho do ponto size=4, # tipo de icone do ponto. importante ser o numero 19, senao nao tem como # plotar as cores para os grupos diferentes pch = 19 ) + # Adicionar os percentuais para cada ponto geom_text( # Tamanho da Letra size = 4, # Colocar um pouco abaixo dos pontos nudge_y = -0.35, mapping = aes( label = # Se o pais eh Germany, plotar os numeros com o simbolo % ifelse(Country == \u0026quot;Germany\u0026quot;, # Verdadeiro: paste0(as.character(round(Age_Percent*100,0)),\u0026quot;%\u0026quot;), # Falso paste0(as.character(round(Age_Percent*100,0))) ), color = ifelse(Diferenca == 0, \u0026quot;zero\u0026quot;, Age_Group) ) ) + # Adicionar \u0026quot;Legenda\u0026quot; acima apenas dos valores do primeiro grupo (germany) geom_text( # Tamanho da Letra size = 4, # Negrito fontface = \u0026quot;bold\u0026quot;, # Colocar um pouco acima dos pontos nudge_y = 0.6, mapping = aes( label = # Se o pais eh Germany, plotar a legenda ifelse(Country == \u0026quot;Germany\u0026quot;, # Verdadeiro: ifelse(Age_Group == \u0026quot;Ages_35_plus\u0026quot;, # Verdadeiro: \u0026quot;Ages 35+\u0026quot;, # Falso: \u0026quot;Ages 18-34\u0026quot; ), # Falso \u0026quot;\u0026quot; ), color = ifelse(Diferenca == 0, \u0026quot;zero\u0026quot;, Age_Group) ) ) + # Mudar Cores scale_color_manual( # Se diferenca for 0, plotar cinza, caso contrario, plotar com as # cores por grupo values = c(laranja, verde, \u0026quot;gray\u0026quot;) ) + # Mudar escala eixo X scale_x_continuous( # Limite de 0 a 1.2 (nao vai de 0 a 1 pq precisamos de um espaco apos o 1, # para colocar os valores da diferenca) limits = c(0,1.2), # Mostrar texto a cada 25% breaks = seq(0,1,.25), # Mudar escala para percentual labels = scales::percent ) + # Aumentar escala eixo y para caber as legendas scale_y_discrete( expand = expand_scale(add=c(0.65,1)) ) + # Inserir Retangulo em Branco para delimitar a area onde ficarao os valores # das diferencas geom_rect( mapping = aes(xmin = 1.01, xmax = Inf , ymin = -Inf, ymax = Inf), fill = \u0026quot;white\u0026quot;, color = \u0026quot;white\u0026quot; ) + # Inserir Retangulo para as diferencas geom_rect( mapping = aes(xmin = 1.05, xmax = 1.15 , ymin = -Inf, ymax = Inf), fill = fundo_diferencas, color = fundo_diferencas ) + # Inserir Valores das Diferencas geom_text( # Negrito fontface = \u0026quot;bold\u0026quot;, # Tamanho da Letra size = 4, # Cor colour = \u0026quot;black\u0026quot;, # Posicao mapping = aes( x = 1.1, y = Country, label = # Para evitar valor duplicado da diferenca, plotar vazio para o # primeiro grupo e plotar a diferenca apenas para o grupo Ages_18_34. ifelse(Age_Group == \u0026quot;Ages_35_plus\u0026quot;, # Verdadeiro \u0026quot;\u0026quot;, #Falso # Se a Diferenca for igual a zero, nao colocar nenhum sinal. # Caso contratio, se for Positiva, colocar sinal + na frente. # Colocar sinal -, caso contrario ifelse(Diferenca == 0, # Verdadeiro: paste0(as.character(round(Diferenca*100,0))), # Falso ifelse(Diferenca \u0026gt; 0, # Verdadeiro paste0(\u0026quot;+\u0026quot;,as.character(round(Diferenca*100,0))), # Falso (nao precisa colocar o simbolo -) paste0(as.character(round(Diferenca*100,0))) ) ) ) ) ) + # Inserir Titulo das Diferencas geom_text( # Negrito fontface = \u0026quot;bold\u0026quot;, # Tamanho da Letra size = 4, # Cor colour = \u0026quot;gray\u0026quot;, # Colocar um pouco acima dos pontos nudge_y = 0.6, # Posicao mapping = aes( x = 1.1, y = Country, label = # Plotar acima apenas dos valores do primeiro grupo (germany) ifelse(Country == \u0026quot;Germany\u0026quot;, # Verdadeiro \u0026quot;DIFF\u0026quot;, #Falso \u0026quot;\u0026quot; ) ) ) + # Titulo e Labels dos Eixos labs( title = \u0026quot;The social media age gap\u0026quot;, subtitle = paste0( \u0026quot;Adult internet users or reported smartphone owners who \\n\u0026quot;, \u0026quot;use social networking sites\u0026quot; ), x = \u0026quot;\u0026quot;, y = \u0026quot;\u0026quot; ) + # Mudar Fundo, Tamanho das Letras, Etc. theme( # Mudar Fonte de todos os textos text = element_text(color = \u0026quot;#4e4d47\u0026quot;, size = 14), # Colocar nome dos Paises em Negrito axis.text.y = element_text(face = \u0026quot;bold\u0026quot;), # Separar mais o texto do eixo dos percentuais do grafico axis.text.x = element_text(vjust = -0.75), # Excluir ticks axis.ticks = element_blank(), # Excluir Legenda Original legend.position = \u0026quot;none\u0026quot;, # Fundo Branco panel.background = element_blank(), # Linhas por Country panel.grid.major.y = element_line(colour = cinza_claro, size = 1), # Mudar Fonte Titulo plot.title = element_text(face = \u0026quot;bold\u0026quot;, size = 16), # Mudar Fonte Sub-Titulo e Adicionar Margem plot.subtitle = element_text(face = \u0026quot;italic\u0026quot;, size = 12, margin = margin(b = 0.5, unit = \u0026quot;cm\u0026quot;)) ) p  E o gráfico final: ","date":1543381200,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1543381200,"objectID":"b0caf6e74851321808faebcb3b40a0bb","permalink":"/pt/post/dotplot-ggplot/","publishdate":"2018-11-28T00:00:00-05:00","relpermalink":"/pt/post/dotplot-ggplot/","section":"post","summary":"Criar um gráfico de haltere usando o ponto geom_point","tags":["ggplot"],"title":"Criar um gráfico de haltere (Dumbbell Plot) usando ggplot","type":"post"},{"authors":["G Varela-Alvarenga"],"categories":null,"content":"Este gráfico foi criado em resposta a essa pergunta no StackOverflow. O objetivo é replicar o seguinte gráfico: ! [] (waterfall_original.png)\nO truque para plotar gráficos em cascata com ggplot2 é criar um conjunto de dados com os grupos (valores x - estou chamando isso no meu código como x.axis.Var) no ordem exata que você deseja plotar. Depois disso, você precisa obter os pontos inicial e final das barras para cada categoria (categorias em sua legenda - cat.Var) dentro dos grupos. Em seguida, crie outro grupo com os * totais por categoria *. Você também precisará de um índice numérico para os grupos manipularem as barras. Finalmente, obtenha uma coluna com o * total por grupo * para os números acima das barras.\nSuponha que seu banco de dados esteja assim:\ndf \u0026lt;- data.frame( x.axis.Var = rep(c(\u0026quot;Widgets\u0026quot;, \u0026quot;Gridgets\u0026quot;, \u0026quot;Groms\u0026quot;, \u0026quot;Wobs\u0026quot;), 3), cat.Var = rep(c(\u0026quot;High End\u0026quot;, \u0026quot;Mid Range\u0026quot;, \u0026quot;Low End\u0026quot;), each = 4), values = c(600, 500, 300, 200, # high end 300, 200, 300, 250, # mid range 100, 80, 200, 150 # low end ) )  Ou,\nx.axis.Var cat.Var values 1 Widgets High End 600 2 Gridgets High End 500 3 Groms High End 300 4 Wobs High End 200 5 Widgets Mid Range 300 6 Gridgets Mid Range 200 7 Groms Mid Range 300 8 Wobs Mid Range 250 9 Widgets Low End 100 10 Gridgets Low End 80 11 Groms Low End 200 12 Wobs Low End 150  Siga os passos abaixo para obter um novo banco de dados:\nlibrary('tidyverse') df.tmp \u0026lt;- df %\u0026gt;% # \\_Set the factor levels in the order you want ---- mutate( x.axis.Var = factor(x.axis.Var, levels = c(\u0026quot;Widgets\u0026quot;, \u0026quot;Gridgets\u0026quot;, \u0026quot;Groms\u0026quot;, \u0026quot;Wobs\u0026quot;)), cat.Var = factor(cat.Var, levels = c(\u0026quot;Low End\u0026quot;, \u0026quot;Mid Range\u0026quot;, \u0026quot;High End\u0026quot;)) ) %\u0026gt;% # \\_Sort by Group and Category ---- arrange(x.axis.Var, desc(cat.Var)) %\u0026gt;% # \\_Get the start and end points of the bars ---- mutate(end.Bar = cumsum(values), start.Bar = c(0, head(end.Bar, -1))) %\u0026gt;% # \\_Add a new Group called 'Total' with total by category ---- rbind( df %\u0026gt;% # \\___Sum by Categories ---- group_by(cat.Var) %\u0026gt;% summarise(values = sum(values)) %\u0026gt;% # \\___Create new Group: 'Total' ---- mutate( x.axis.Var = \u0026quot;Total\u0026quot;, cat.Var = factor(cat.Var, levels = c(\u0026quot;Low End\u0026quot;, \u0026quot;Mid Range\u0026quot;, \u0026quot;High End\u0026quot;)) ) %\u0026gt;% # \\___Sort by Group and Category ---- arrange(x.axis.Var, desc(cat.Var)) %\u0026gt;% # \\___Get the start and end points of the bars ---- mutate(end.Bar = cumsum(values), start.Bar = c(0, head(end.Bar, -1))) %\u0026gt;% # \\___Put variables in the same order ---- select(names(df),end.Bar,start.Bar) ) %\u0026gt;% # \\_Get numeric index for the groups ---- mutate(group.id = group_indices(., x.axis.Var)) %\u0026gt;% # \\_Create new variable with total by group ---- group_by(x.axis.Var) %\u0026gt;% mutate(total.by.x = sum(values)) %\u0026gt;% # \\_Order the columns ---- select(x.axis.Var, cat.Var, group.id, start.Bar, values, end.Bar, total.by.x)  Isso produz:\nx.axis.Var cat.Var group.id start.Bar values end.Bar total.by.x \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; 1 Widgets High End 1 0 600 600 1000 2 Widgets Mid Range 1 600 300 900 1000 3 Widgets Low End 1 900 100 1000 1000 4 Gridgets High End 2 1000 500 1500 780 5 Gridgets Mid Range 2 1500 200 1700 780 6 Gridgets Low End 2 1700 80 1780 780 7 Groms High End 3 1780 300 2080 800 8 Groms Mid Range 3 2080 300 2380 800 9 Groms Low End 3 2380 200 2580 800 10 Wobs High End 4 2580 200 2780 600 11 Wobs Mid Range 4 2780 250 3030 600 12 Wobs Low End 4 3030 150 3180 600 13 Total High End 5 0 1600 1600 3180 14 Total Mid Range 5 1600 1050 2650 3180 15 Total Low End 5 2650 530 3180 3180  Então, eu posso usar o seguinte código para obter o gráfico que eu quero:\nggplot(df.tmp, aes(x = group.id, fill = cat.Var)) + # \\_Simple Waterfall Chart ---- geom_rect(aes(x = group.id, xmin = group.id - 0.25, # control bar gap width xmax = group.id + 0.25, ymin = end.Bar, ymax = start.Bar), color=\u0026quot;black\u0026quot;, alpha=0.95) + # \\_Lines Between Bars ---- geom_segment(aes(x=ifelse(group.id == last(group.id), last(group.id), group.id+0.25), xend=ifelse(group.id == last(group.id), last(group.id), group.id+0.75), y=ifelse(cat.Var == \u0026quot;Low End\u0026quot;, end.Bar, # these will be removed once we set the y limits max(end.Bar)*2), yend=ifelse(cat.Var == \u0026quot;Low End\u0026quot;, end.Bar, # these will be removed once we set the y limits max(end.Bar)*2)), colour=\u0026quot;black\u0026quot;) + # \\_Numbers inside bars (each category) ---- geom_text( mapping = aes( label = ifelse(values \u0026lt; 150, \u0026quot;\u0026quot;, ifelse(nchar(values) == 3, as.character(values), sub(\u0026quot;(.{1})(.*)\u0026quot;, \u0026quot;\\\\1.\\\\2\u0026quot;, as.character(values) ) ) ), y = rowSums(cbind(start.Bar,values/2)) ), color = \u0026quot;white\u0026quot;, fontface = \u0026quot;bold\u0026quot; ) + # \\_Total for each category above bars ---- geom_text( mapping = aes( label = ifelse(cat.Var != \u0026quot;Low End\u0026quot;, \u0026quot;\u0026quot;, ifelse(nchar(total.by.x) == 3, as.character(total.by.x), sub(\u0026quot;(.{1})(.*)\u0026quot;, \u0026quot;\\\\1.\\\\2\u0026quot;, as.character(total.by.x) ) ) ), y = end.Bar+200 ), color = \u0026quot;#4e4d47\u0026quot;, fontface = \u0026quot;bold\u0026quot; ) + # \\_Change colors ---- scale_fill_manual(values=c('#c8f464','#ff6969','#55646e')) + # \\_Change y axis to same scale as original ---- scale_y_continuous( expand=c(0,0), limits = c(0, 3500), breaks = seq(0, 3500, 500), labels = ifelse(nchar(seq(0, 3500, 500)) \u0026lt; 4, as.character(seq(0, 3500, 500)), sub(\u0026quot;(.{1})(.*)\u0026quot;, \u0026quot;\\\\1.\\\\2\u0026quot;, as.character(seq(0, 3500, 500)) ) ) ) + # \\_Add tick marks on x axis to look like the original plot ---- scale_x_continuous( expand=c(0,0), limits = c(min(df.tmp$group.id)-0.5,max(df.tmp$group.id)+0.5), breaks = c(min(df.tmp$group.id)-0.5, unique(df.tmp$group.id), unique(df.tmp$group.id) + 0.5 ), labels = c(\u0026quot;\u0026quot;, as.character(unique(df.tmp$x.axis.Var)), rep(c(\u0026quot;\u0026quot;), length(unique(df.tmp$x.axis.Var))) ) ) + # \\_Theme options to make it look like the original plot ---- theme( text = element_text(size = 14, color = \u0026quot;#4e4d47\u0026quot;), axis.text = element_text(size = 10, color = \u0026quot;#4e4d47\u0026quot;, face = \u0026quot;bold\u0026quot;), axis.text.y = element_text(margin = margin(r = 0.3, unit = \u0026quot;cm\u0026quot;)), axis.ticks.x = element_line(color = c(\u0026quot;black\u0026quot;, rep(NA, length(unique(df.tmp$x.axis.Var))), rep(\u0026quot;black\u0026quot;, length(unique(df.tmp$x.axis.Var))-1) ) ), axis.line = element_line(colour = \u0026quot;#4e4d47\u0026quot;, size = 0.5), axis.ticks.length = unit(.15, \u0026quot;cm\u0026quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), panel.background = element_blank(), plot.margin = unit(c(1, 1, 1, 1), \u0026quot;lines\u0026quot;), legend.text = element_text(size = 10, color = \u0026quot;#4e4d47\u0026quot;, face = \u0026quot;bold\u0026quot;, margin = margin(l = 0.25, unit = \u0026quot;cm\u0026quot;) ), legend.title = element_blank() )  E o gráfico final: ","date":1538193600,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1538193600,"objectID":"7b99bf3b07db4f7e139db29f9d626018","permalink":"/pt/post/waterfall-ggplot/","publishdate":"2018-09-29T00:00:00-04:00","relpermalink":"/pt/post/waterfall-ggplot/","section":"post","summary":"Criar um gráfico de 'cascata empilhada' no R","tags":["ggplot"],"title":"Crie um gráfico em cascata (Waterfall Chart) usando ggplot","type":"post"},{"authors":null,"categories":null,"content":"","date":1532448000,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1532448000,"objectID":"f270bdd38c9502b5c027a8bb75b42a51","permalink":"/pt/project/shiny-modal-modules-jquery/","publishdate":"2018-07-24T12:00:00-04:00","relpermalink":"/pt/project/shiny-modal-modules-jquery/","section":"project","summary":"Use este modal para adicionar / remover conjuntos de variáveis (e seus valores) a um conjunto de dados.","tags":["Shiny App","Shiny Module","jQuery","JavaScript"],"title":"Aplicativo Shiny com Modal, Módulos e jQuery","type":"project"},{"authors":null,"categories":null,"content":"","date":1532440800,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1532440800,"objectID":"2b41104b1402ce862aee522703bc72c7","permalink":"/pt/project/shiny-compare-images/","publishdate":"2018-07-24T10:00:00-04:00","relpermalink":"/pt/project/shiny-compare-images/","section":"project","summary":"Escolha entre duas imagens geradas aleatoriamente.","tags":["Shiny App"],"title":"Aplicativo Shiny para comparar imagens","type":"project"},{"authors":["G Varela-Alvarenga","DM Pianto","BC Araújo"],"categories":null,"content":"","date":1355288400,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1355288400,"objectID":"4f10f3c5a62ac88d78032e61e4c7c5e4","permalink":"/pt/publication/dose-response-function/","publishdate":"2012-12-12T00:00:00-05:00","relpermalink":"/pt/publication/dose-response-function/","section":"publication","summary":"O objetivo deste trabalho é analisar o impacto dos Fundos Setoriais do ponto de vista do montante de recursos fornecidos para as empresas industriais brasileiras no período entre 2001 e 2006. Deseja-se avaliar o impacto do investimento governamental sobre os indicadores de esforço tecnológico (investimento em P\u0026D) e resultado (tamanho e exportações de alta intensidade tecnológica) dessas empresas. Para tal, optou-se por utilizar uma técnica que avalia a resposta do investimento privado aos diferentes montantes de incentivo público, via escore de propensão generalizado com correção do viés de seleção. Este é o primeiro trabalho no Brasil que utiliza esta técnica para avaliar os impactos de incentivos públicos à inovação. Estimativas para os efeitos médios indicam que se o governo aumentasse os recursos fornecidos pelos Fundos Setoriais em 1%, as empresas aumentariam seu investimento em P\u0026D em 1,5% no ano de acesso aos recursos e em 1,8% quatro anos após este acesso, em relação às que não acessaram. Ademais, os impactos marginais dos Fundos Setoriais indicam uma relação quadrática em forma de “U”, o que sugere que estes recursos têm mais impacto nas extremidades da distribuição, isto é, eles têm impacto relativo mais forte para as firmas muito pequenas (que participam de editais de valor muito reduzido, e que por serem pequenas o impacto relativo é majorado) e para as firmas médias ou grandes (que participam de editais de valores mais altos). Todos estes resultados permitem rejeitar a hipótese de crowding-out. ","tags":[],"title":"Impactos dos Fundos Setoriais nas empresas : Novas perspectivas a partir da função dose-resposta","type":"publication"},{"authors":null,"categories":null,"content":"Emitido pela Confederação Nacional da Indústria (CNI) com o apoio da Associação Brasileira de Centros de Pós-Graduação em Economia (ANPEC).\nPrêmio concedido ao artigo: “Impactos dos Fundos Setoriais nas Empresas: Novas Perspectivas a partir da Função Dose-Resposta”.\nClique aqui para obter o artigo completo, e aqui para mais informações sobre o prêmio.\n","date":1355288400,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1355288400,"objectID":"77cc1ec41b53219e6ba05abfc9562f9d","permalink":"/pt/awards/premio-cni/","publishdate":"2012-12-12T00:00:00-05:00","relpermalink":"/pt/awards/premio-cni/","section":"awards","summary":"Emitido pela Confederação Nacional da Indústria (CNI) com o apoio da Associação Brasileira de Centros de Pós-Graduação em Economia (ANPEC).\nPrêmio concedido ao artigo: “Impactos dos Fundos Setoriais nas Empresas: Novas Perspectivas a partir da Função Dose-Resposta”.\nClique aqui para obter o artigo completo, e aqui para mais informações sobre o prêmio.","tags":null,"title":"Prêmio CNI de Economia","type":"awards"},{"authors":["PF Alves","G Varela-Alvarenga","CH Rocha"],"categories":null,"content":"","date":1309492800,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1309492800,"objectID":"2acc9ef241e37cfd69a79dcfe04b76e1","permalink":"/pt/publication/airticket/","publishdate":"2011-07-01T00:00:00-04:00","relpermalink":"/pt/publication/airticket/","section":"publication","summary":"A demanda por transporte aéreo está diretamente relacionada aos ciclos econômicos (doméstico e internacional), às flutuações de moeda e câmbio e ao desempenho das economias. O desempenho do setor de transporte aéreo pode ser utilizado para avaliar o grau de aquecimento da economia. Este setor, sendo altamente intensivo em capital e energia, é fundamental na cadeia produtiva de um país, por relacionar diferentes áreas. O presente artigo busca averiguar se há uma relação de equilíbrio de longo prazo entre a demanda por tickets aéreos no Brasil, seus preços, e indicadores macroeconômicos – tais como o PIB e o preço dos combustíveis. A análise centra-se na demanda das companhias aéreas TAM, Gol (e VARIG) e Web Jet, as quais juntas concentram mais de 85% do mercado doméstico de transporte de passageiros. Os resultados indicam que o crescimento econômico é um dos fatores determinantes da pressão sobre a capacidade da infra-estrutura aeroportuária, entretanto o parâmetro de longo prazo do preço é baixo, refletindo a predominância do viajante a negócios no transporte doméstico de passageiros.","tags":[],"title":"Demanda por ticket aéreo na economia brasileira: uma análise de co-integração.","type":"publication"},{"authors":["G Varela-Alvarenga","et.al"],"categories":null,"content":"","date":1285905600,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1285905600,"objectID":"78f6e43a4f069d67c50874d68f8f4a22","permalink":"/pt/publication/vehicle-sales/","publishdate":"2010-10-01T00:00:00-04:00","relpermalink":"/pt/publication/vehicle-sales/","section":"publication","summary":"O objetivo deste trabalho é analisar os impactos da redução do Imposto sobre Produtos Industrializados (IPI) sobre as vendas de veículos no Brasil entre janeiro e novembro de 2009. Para alcançar esse objetivo, foi estimado um modelo no qual as vendas internas de veículos são função do preço, da renda e do crédito concedido para sua aquisição. O modelo econométrico adotado permite verificar a existência de relações de curto e de longo prazo entre as variáveis utilizadas. Os resultados obtidos para as elasticidades de transmissão das variáveis no longo prazo e para suas velocidades de ajustamento reafirmam a percepção de que a redução do IPI foi bastante importante para a recuperação das vendas do setor automotivo no período subsequente à crise financeira internacional. A redução do imposto foi responsável por 20,7% das vendas que se observaram no período analisado. O crédito, porém, teria apresentado um efeito não desprezível, especialmente se outras medidas anticíclicas não tivessem sido adotadas ao longo do ano de 2009.","tags":[],"title":"Políticas anticíclicas na indústria automobilística: uma análise de co-integração dos impactos da redução do IPI sobre as vendas de veículos.","type":"publication"}]