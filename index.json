[{"authors":null,"categories":null,"content":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.main]] menu links to it in the config.toml.\n","date":1536465600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536465600,"objectID":"c3224f3a64174f08aaf31e1f1d16ffd3","permalink":"/tutorial/","publishdate":"2018-09-09T00:00:00-04:00","relpermalink":"/tutorial/","section":"tutorial","summary":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.","tags":null,"title":"Overview","type":"docs"},{"authors":["G Varela-Alvarenga"],"categories":null,"content":" Section 1: Intro In March 2019, the Brazilian Annual Land Use and Land Cover Mapping Project (MapBiomas) launched the Mapbiomas v.3.1 data set on land use and land cover for the period of 1985 to 2017.\nThis data set has information about the total area (in hectares) of forest formations, non-forest natural formations, farming, non-vegetated areas and water bodies - detailed information about these and their subdivisions can be found here.\nAnd even though their website provides tools for anyone to create their own maps, I\u0026rsquo;ve decided to create my own animated map using R and the ggplot2 and gifski packages because I wanted to see the percentage of a city area that is covered by native vegetation. I\u0026rsquo;m also using the brazilmaps package to plot Brazil\u0026rsquo;s map.\nI wanted to focus on Natural Forest Formation data only and see how its total area evolved since 1985.\nThis tutorial has 3 sections, besides this introduction. The second section just goes over the packages and fonts that I used and how to download these fonts. In Section 3, I go over the data set and talk about its variables and their definitions. I also go over steps of importing the data set and doing some data manipulation to obtain the information that I want. Section 4 gives you the code for the final map.\nYou can download the .R file with the complete code from my GitHub.\nSection 2: Packages I\u0026rsquo;ll begin by going over the fonts I used and how to install them. I use Windows, so I don\u0026rsquo;t know if the same steps apply to other systems (sorry Mac and Unix users).\nI\u0026rsquo;m using Lato, an open-source font family. So, make sure you download and install the Lato font before we start or you can just let R use the default system font - you won\u0026rsquo;t have to change the code, you will get some warning messages, but R will still plot the map.\nYou can download it from here.\nThe first thing I do is make sure that R can use this font, so I\u0026rsquo;ll use the extrafont package for that. If it\u0026rsquo;s your first time using these fonts you\u0026rsquo;ll have to run the font_import() command (this might take a while depending on the number of installed fonts you have, the good thing is that you\u0026rsquo;ll have to run this command only once).\n# ************************************************************************* ---- # extrafont Package ---- # ************************************************************************* ---- #install.packages(\u0026quot;extrafont\u0026quot;) library(\u0026quot;extrafont\u0026quot;) # ************************************************************************* ---- # Import Font ---- # ************************************************************************* ---- # Install font Lato # Run font_import only once: # font_import() # Check if Lato was imported fonts()[grep(\u0026quot;Lato\u0026quot;, fonts())]  ## [1] \u0026quot;Lato Black\u0026quot; \u0026quot;Lato\u0026quot; \u0026quot;Lato Hairline\u0026quot; \u0026quot;Lato Light\u0026quot; ## [5] \u0026quot;Lato Medium\u0026quot; \u0026quot;Lato Thin\u0026quot;  # Register the fonts with R loadfonts(device = \u0026quot;win\u0026quot;) # ************************************************************************* ---- # Remaining Packages ---- # ************************************************************************* ---- #install.packages(\u0026quot;openxlsx\u0026quot;) #install.packages(\u0026quot;tidyverse\u0026quot;) #install.packages(\u0026quot;brazilmaps\u0026quot;) #install.packages(\u0026quot;gifski\u0026quot;) library(\u0026quot;openxlsx\u0026quot;) library(\u0026quot;tidyverse\u0026quot;) library(\u0026quot;brazilmaps\u0026quot;) library(\u0026quot;gifski\u0026quot;)  Section 3: The Data Credit Where Credit is Due The MapBiomas data are public, open and free through the simple reference of the source:\n\u0026ldquo;Project MapBiomas - Collection 3.1 of Brazilian Land Cover \u0026amp; Use Map Series, accessed on 04/24/2019 through the link: (http://mapbiomas.org/pages/estatisticas\u0026quot;)\n\u0026ldquo;MapBiomas Project - is a multi-institutional initiative to generate annual land cover and use maps using automatic classification processes applied to satellite images. The complete description of the project can be found at http://mapbiomas.org\u0026ldquo;\nI\u0026rsquo;m also using data on the area of the cities in Brazil from IBGE (the Brazilian Institute of Geography and Statistics). Due to changes in the size of the cities over the years, I\u0026rsquo;ve decided to use data from 2016. I was getting some incorrect results using data from 2017 or 2018, like cities with over 100% of their area covered by native vegetation. Clearly, these cities were divided but this wasn\u0026rsquo;t accounted for in MapBiomas\u0026rsquo; data set. No cities with over 100% of their area covered by native vegetation were observed when using 2016 data.\nThe code below imports the data sets to R, but if you want you can download the xlsx files from the official sites by clicking here for MapBiomas\u0026rsquo; data set and here for IBGE\u0026rsquo;s data set.\nFor the sake of maintaining my code, I\u0026rsquo;m also uploading the original databases to my GitHub repository and that\u0026rsquo;s the data I\u0026rsquo;ll use in my code below.\nData Dictionary MapBiomas\u0026rsquo; xlsx file has the following worksheet:\n INSTRUCTIONS; LAND COVER - BIOMAS e UF; LAND COVER - MUN_UF; CONSULTA BIOMA-UF; and CONSULTA MUN-UF.  I\u0026rsquo;ll use the LAND COVER - MUN_UF worksheet. The variables in this worksheet are:\n   Variable Class Description     COD_ESTADO numeric state identifier   estado character state name   CODIBGE numeric city identifier   municipio character city name   cod.classe numeric land cover class identifier   nivel1 character class level 1   nivel2 character class level 2   nivel3 character class level 3   1985 numeric covered area in hectares(ha) in 1985   \u0026hellip; \u0026hellip; \u0026hellip;   2017 numeric covered area in hectares(ha) in 2017    IBGE\u0026rsquo;s xlsx file has the following worksheet.\n AR_BR_MUN_2016; AR_BR_UF_2016; AR_BR_RG_2016; and AR_BR_2016.  I\u0026rsquo;ll use the AR_BR_MUN_2016 worksheet. The variables in this worksheet are:\n   Variable Class Description     ID numeric ID   CD_GCUF character state identifier   NM_UF character state name   NM_UF_SIGLA character state abbreviation   CD_GCMUN character city identifier   NM_MUN_2016 character city name   AR_MUN_2016 numeric area in squared km    I\u0026rsquo;m also creating the data set brazil.map with the shapefiles to plot Brazil\u0026rsquo;s map divided by city using the function brazilmaps::get_brmap.\n# ************************************************************************* ---- # Data Import ---- # ************************************************************************* ---- # Change number format options(scipen=10) # File Path on GitHub file_path_forest_area = paste0( \u0026quot;https://github.com/gu-stat/forest-area/blob/master/\u0026quot;, \u0026quot;data/Dados_Cobertura_MapBiomas_3.1_Biomas-UF-Municipios_%20SITE_UNPROTECTED.xlsx\u0026quot;, \u0026quot;?raw=true\u0026quot;) file_path_city_area = paste0( \u0026quot;https://github.com/gu-stat/forest-area/blob/master/\u0026quot;, \u0026quot;data/AR_BR_RG_UF_MUN_2016.xlsx\u0026quot;, \u0026quot;?raw=true\u0026quot;) # Import df.original \u0026lt;- openxlsx::read.xlsx(file_path_forest_area, sheet = \u0026quot;LAND COVER - MUN_UF\u0026quot;) df.city.area \u0026lt;- openxlsx::read.xlsx(file_path_city_area, sheet = \u0026quot;AR_BR_MUN_2016\u0026quot;) ## \\__ Map Data by City ---- brazil.map \u0026lt;- get_brmap(geo = \u0026quot;City\u0026quot;, class = \u0026quot;sf\u0026quot;)  Data Manipulation # ************************************************************************* ---- # Data Manipulation ---- # ************************************************************************* ---- ## \\__ Transform City Code into Numeric ---- df.city.area2 \u0026lt;- df.city.area %\u0026gt;% dplyr::mutate(CODIBGE = as.numeric(CD_GCMUN)) %\u0026gt;% dplyr::select(CODIBGE, AR_MUN_2016) ## \\__ Natural Forest Coverage Area Data ---- df.nat.forest \u0026lt;- df.original %\u0026gt;% filter(nivel2 == \u0026quot;Floresta Natural\u0026quot;) %\u0026gt;% select(COD_ESTADO, estado, CODIBGE, nivel2, nivel3, paste0(seq(1985, 2017)) ) %\u0026gt;% # SUM THE DIFFERENT SUB-GROUPS OF NATURAL FOREST group_by(COD_ESTADO, estado, CODIBGE) %\u0026gt;% summarize_at(vars(-nivel2,-nivel3),sum) %\u0026gt;% ungroup() ## \\__ Join with City Area Data ---- df.nat.forest.AREA \u0026lt;- df.nat.forest %\u0026gt;% # ADD TOTAL AREA OF MUNICIPALITY TO DATA SET dplyr::left_join(x = ., y = df.city.area2, by = \u0026quot;CODIBGE\u0026quot;) %\u0026gt;% # CREATE PERCENTAGES ## Divide x/100 to transform from hectares to squared km dplyr::mutate_at(.vars=vars(paste0(seq(1985,2017))), .fun = function(x) round(100*((x/100)/.$AR_MUN_2016),3) ) # CHECK IF ANYTHING GREATER THAN 100% greater.1 \u0026lt;- NULL for (i in 1985:2017) { greater.1 \u0026lt;- append(greater.1, which(df.nat.forest.AREA[,paste0(i)] \u0026gt;= 100)) } greater.1 \u0026lt;- greater.1 %\u0026gt;% unlist() %\u0026gt;% unique() ## \\__ Create Percentages Breaks ---- df.nat.forest.AREA \u0026lt;- df.nat.forest.AREA %\u0026gt;% dplyr::mutate_at(.vars=vars(paste0(seq(1985,2017))), .fun = function(x) cut(x,breaks=c(-Inf, 0, 1, seq(0, 100, 10)[-1])) )  Section 4: The Map # ************************************************************************* ---- # Map ---- # ************************************************************************* ---- ## \\__ Function that Joins Map Data by City with Forest Area Data ---- create.map.df \u0026lt;- function(DATA){ map \u0026lt;- join_data(map = brazil.map, data = DATA, by = c(\u0026quot;City\u0026quot; = \u0026quot;CODIBGE\u0026quot;)) map.ggplot \u0026lt;- as(map, \u0026quot;Spatial\u0026quot;) map.ggplot@data$id = row.names(map.ggplot@data) df.map.ggplot \u0026lt;- suppressMessages(ggplot2::fortify(map.ggplot)) df.map.ggplot \u0026lt;- dplyr::left_join(df.map.ggplot, map.ggplot@data, by = \u0026quot;id\u0026quot;) return(df.map.ggplot) } ## \\____ Map Data for Plot ---- df.map.ggplot \u0026lt;- create.map.df(df.nat.forest.AREA) ## \\__ Map Colors ---- # USE https://gka.github.io/palettes TO GET # COLOR SCALE FROM white TO darkgreen # THAT'S ALSO SUITABLE TO COLORBLIND PEOPLE WITH 12 BREAKS # SAME NUMBER AS THE LEVELS OF cut(x,breaks=c(-Inf, 0, 1, seq(0, 100, 10)[-1])) map.colors \u0026lt;- c('#ffffff','#eaf1e7','#d4e2cf','#bfd4b8','#abc5a1','#96b78a', '#81a974','#6c9b5f','#588d4a','#428034','#28711d','#006400') ### \\__ Map Labels ---- map.labels \u0026lt;- c(\u0026quot;0\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;10%\u0026quot;, rep(\u0026quot;\u0026quot;,3), \u0026quot;50%\u0026quot;, rep(\u0026quot;\u0026quot;,3), \u0026quot;90%\u0026quot;, \u0026quot;\u0026quot;) ## \\__ Create Theme ---- map.theme \u0026lt;- theme( text = element_text(size = 13, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;), axis.text = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank(), plot.background = element_rect(fill = \u0026quot;#3a3935\u0026quot;, color = NA), panel.background = element_rect(fill = \u0026quot;#3a3935\u0026quot;, color = NA), panel.grid = element_blank(), plot.margin = margin(t = 0.25,r = 0.25,b = 0.25,l = 0.25,unit = \u0026quot;cm\u0026quot;), plot.title = element_text(margin = margin(t = 0.25, unit = \u0026quot;cm\u0026quot;)), plot.caption = element_text(size = 10), legend.background = element_rect(fill = \u0026quot;#3a3935\u0026quot;, color = \u0026quot;#3a3935\u0026quot;), legend.text = element_text(size = 11), legend.title = element_text(size = 12), legend.position = \u0026quot;left\u0026quot;, legend.key = element_rect(color = \u0026quot;transparent\u0026quot;), legend.key.size = unit(0, units = \u0026quot;mm\u0026quot;), legend.key.width = unit(2, units = \u0026quot;mm\u0026quot;) ) ## \\__ Plot Map ---- ### \\____ Function for GIF ---- plot.map.forest \u0026lt;- function(){ for (i in 1985:2017) { lost.area.year.km2 \u0026lt;- round( sum(-(df.nat.forest %\u0026gt;% summarize_at(paste0(i),sum)/100), df.nat.forest %\u0026gt;% summarize_at(paste0(1985),sum)/100) ,2 ) lost.area.year.mi2 \u0026lt;- round(lost.area.year.km2/2.59, 2) map.forest \u0026lt;- # MAP ggplot(mapping = aes(x = long, y = lat, group = group)) + # MAP WITH TRANSPARENT CITY LINES geom_polygon( data = df.map.ggplot, aes_string(fill = paste0(\u0026quot;X\u0026quot;,i)), color = \u0026quot;transparent\u0026quot; ) + # LEGEND scale_fill_manual( values = map.colors, drop = FALSE, na.value = \u0026quot;black\u0026quot;, na.translate = FALSE, name = \u0026quot;\u0026quot;, label = map.labels, guide = guide_legend( direction = \u0026quot;vertical\u0026quot;, ncol = 1, reverse = TRUE, label.vjust = 2.5 ) ) + # MAP LIMITS xlim(range(df.map.ggplot$long)) + ylim(range(df.map.ggplot$lat)) + coord_map() + # ADD TITLE AND CAPTIONS labs( title = \u0026quot;Percentage of City Area Covered By Native Vegetation, Brazil.\u0026quot;, caption = paste0(\u0026quot;Map: Gustavo Varela-Alvarenga - ogustavo.com \\n \\n \u0026quot;, \u0026quot;Data: MapBiomas v.3.1 - mapbiomas.org \u0026amp; \u0026quot;, \u0026quot;IBGE - www.ibge.gov.br \u0026quot;) ) + # ADD THEME map.theme + # ADD ANNOTATIONS ## WORD YEAR annotate( geom = \u0026quot;text\u0026quot;, x = -44.1, y = 2.4, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;year\u0026quot;, angle = 90 ) + ## ACTUAL YEAR annotate( geom = \u0026quot;text\u0026quot;, x = -40, y = 2.5, size = 10, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = paste0(i) ) + ## TITLE - TABLE ON THE LEFT annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -26, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = paste0(\u0026quot;Total Area of Native \\n\u0026quot;, \u0026quot;Vegetation Lost Since 1985\u0026quot;) ) + ## LINE BELOW TITLE annotate( geom = \u0026quot;segment\u0026quot;, x = -64.5, xend = -72.5, y = -28, yend = -28, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## VALUES IN KM2 WITH . TO MARK THOUSANDS annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = ifelse(lost.area.year.km2 == 0, \u0026quot;0\u0026quot;, paste0(prettyNum(round(lost.area.year.km2, 0), big.mark=\u0026quot;.\u0026quot;, decimal.mark = \u0026quot;,\u0026quot;), \u0026quot; sq km\u0026quot;) ) ) + ## VALUES IN MI2 WITH , TO MARK THOUSANDS annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = ifelse(lost.area.year.mi2 == 0, \u0026quot;0\u0026quot;, paste0(prettyNum(round(lost.area.year.mi2, 0), big.mark=\u0026quot;,\u0026quot;), \u0026quot; sq miles\u0026quot;) ) ) + ## LINE BELOW TABLE annotate( geom = \u0026quot;segment\u0026quot;, x = -64.5, xend = -72.5, y = -32, yend = -32, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## TITLE - TABLE ON THE RIGHT annotate( geom = \u0026quot;text\u0026quot;, x = -39, y = -26, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = paste0(\u0026quot;Lost Area as \\n\u0026quot;, \u0026quot;% of the Area of\u0026quot;) ) + ## LINE BELOW TITLE annotate( geom = \u0026quot;segment\u0026quot;, x = -35, xend = -43, y = -28, yend = -28, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## ADD WORD TEXAS annotate( geom = \u0026quot;text\u0026quot;, x = -41, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;Texas : \u0026quot; ) + ## ADD VALUE FOR TEXAS annotate( geom = \u0026quot;text\u0026quot;, x = -34, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 1, label = ifelse( lost.area.year.km2 == 0, \u0026quot;0%\u0026quot;, paste0(round(lost.area.year.km2/696241, 2) * 100, \u0026quot;%\u0026quot;) ) ) + ## ADD WORD GERMANY annotate( geom = \u0026quot;text\u0026quot;, x = -41, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;Germany : \u0026quot; ) + ## ADD VALUE FOR GERMANY annotate( geom = \u0026quot;text\u0026quot;, x = -34, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 1, label = ifelse( lost.area.year.km2 == 0, \u0026quot;0%\u0026quot;, paste0(round(lost.area.year.km2/357386, 2) * 100, \u0026quot;%\u0026quot;) ) ) + ## LINE BELOW TABLE annotate( geom = \u0026quot;segment\u0026quot;, x = -35, xend = -43, y = -32, yend = -32, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) print(map.forest) } }  ### \\____ Create GIF ---- ### Be mindful that this will save a gif file named forest_animation.gif into ### your working directory gif_file \u0026lt;- gifski::save_gif( expr = plot.map.forest(), gif_file = \u0026quot;forest_animation.gif\u0026quot;, delay = 0.75, width = 738, height = 788, res = 100 ) utils::browseURL(gif_file)  If you want you can you use the code below to get high-quality static images of the maps. Be mindful that this will save the plots into your working directory.\n#install.packages(\u0026quot;Cairo\u0026quot;) library(\u0026quot;Cairo\u0026quot;) for (i in 1985:2017) { lost.area.year.km2 \u0026lt;- round( sum(-(df.nat.forest %\u0026gt;% summarize_at(paste0(i),sum)/100), df.nat.forest %\u0026gt;% summarize_at(paste0(1985),sum)/100) ,2 ) lost.area.year.mi2 \u0026lt;- round(lost.area.year.km2/2.59, 2) map.forest \u0026lt;- # MAP ggplot(mapping = aes(x = long, y = lat, group = group)) + # MAP WITH TRANSPARENT CITY LINES geom_polygon( data = df.map.ggplot, aes_string(fill = paste0(\u0026quot;X\u0026quot;,i)), color = \u0026quot;transparent\u0026quot; ) + # LEGEND scale_fill_manual( values = map.colors, drop = FALSE, na.value = \u0026quot;black\u0026quot;, na.translate = FALSE, name = \u0026quot;\u0026quot;, label = map.labels, guide = guide_legend( direction = \u0026quot;vertical\u0026quot;, ncol = 1, reverse = TRUE, label.vjust = 2.5 ) ) + # MAP LIMITS xlim(range(df.map.ggplot$long)) + ylim(range(df.map.ggplot$lat)) + coord_map() + # ADD TITLE AND CAPTIONS labs( title = \u0026quot;Percentage of City Area Covered By Native Vegetation, Brazil.\u0026quot;, caption = paste0(\u0026quot;Map: Gustavo Varela-Alvarenga - ogustavo.com \\n \\n \u0026quot;, \u0026quot;Data: MapBiomas v.3.1 - mapbiomas.org \u0026amp; \u0026quot;, \u0026quot;IBGE - www.ibge.gov.br \u0026quot;) ) + # ADD THEME map.theme + # ADD ANNOTATIONS ## WORD YEAR annotate( geom = \u0026quot;text\u0026quot;, x = -44.1, y = 2.4, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;year\u0026quot;, angle = 90 ) + ## ACTUAL YEAR annotate( geom = \u0026quot;text\u0026quot;, x = -40, y = 2.5, size = 10, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = paste0(i) ) + ## TITLE - TABLE ON THE LEFT annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -26, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = paste0(\u0026quot;Total Area of Native \\n\u0026quot;, \u0026quot;Vegetation Lost Since 1985\u0026quot;) ) + ## LINE BELOW TITLE annotate( geom = \u0026quot;segment\u0026quot;, x = -64.5, xend = -72.5, y = -28, yend = -28, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## VALUES IN KM2 WITH . TO MARK THOUSANDS annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = ifelse(lost.area.year.km2 == 0, \u0026quot;0\u0026quot;, paste0(prettyNum(round(lost.area.year.km2, 0), big.mark=\u0026quot;.\u0026quot;, decimal.mark = \u0026quot;,\u0026quot;), \u0026quot; sq km\u0026quot;) ) ) + ## VALUES IN MI2 WITH , TO MARK THOUSANDS annotate( geom = \u0026quot;text\u0026quot;, x = -68.5, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = ifelse(lost.area.year.mi2 == 0, \u0026quot;0\u0026quot;, paste0(prettyNum(round(lost.area.year.mi2, 0), big.mark=\u0026quot;,\u0026quot;), \u0026quot; sq miles\u0026quot;) ) ) + ## LINE BELOW TABLE annotate( geom = \u0026quot;segment\u0026quot;, x = -64.5, xend = -72.5, y = -32, yend = -32, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## TITLE - TABLE ON THE RIGHT annotate( geom = \u0026quot;text\u0026quot;, x = -39, y = -26, size = 4, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 0.5, label = paste0(\u0026quot;Lost Area as \\n\u0026quot;, \u0026quot;% of the Area of\u0026quot;) ) + ## LINE BELOW TITLE annotate( geom = \u0026quot;segment\u0026quot;, x = -35, xend = -43, y = -28, yend = -28, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) + ## ADD WORD TEXAS annotate( geom = \u0026quot;text\u0026quot;, x = -41, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;Texas : \u0026quot; ) + ## ADD VALUE FOR TEXAS annotate( geom = \u0026quot;text\u0026quot;, x = -34, y = -29, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 1, label = ifelse( lost.area.year.km2 == 0, \u0026quot;0%\u0026quot;, paste0(round(lost.area.year.km2/696241, 2) * 100, \u0026quot;%\u0026quot;) ) ) + ## ADD WORD GERMANY annotate( geom = \u0026quot;text\u0026quot;, x = -41, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, label = \u0026quot;Germany : \u0026quot; ) + ## ADD VALUE FOR GERMANY annotate( geom = \u0026quot;text\u0026quot;, x = -34, y = -31, size = 4.5, family = \u0026quot;Lato\u0026quot;, color = \u0026quot;#f2efef\u0026quot;, hjust = 1, label = ifelse( lost.area.year.km2 == 0, \u0026quot;0%\u0026quot;, paste0(round(lost.area.year.km2/357386, 2) * 100, \u0026quot;%\u0026quot;) ) ) + ## LINE BELOW TABLE annotate( geom = \u0026quot;segment\u0026quot;, x = -35, xend = -43, y = -32, yend = -32, linetype = \u0026quot;solid\u0026quot;, color = \u0026quot;#f2efef\u0026quot; ) ### Be mindful that this will save several png files named Y*.png, ### where * is the year, into your working directory ggsave( paste0(\u0026quot;Y\u0026quot;,i,\u0026quot;.png\u0026quot;), device=\u0026quot;png\u0026quot;, type=\u0026quot;cairo\u0026quot;, width = 7, height = 7 ) }  ","date":1556251200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556337600,"objectID":"fd3bdaa1f6a3e26e28a06d3220c8d1ce","permalink":"/post/forest-map/","publishdate":"2019-04-26T00:00:00-04:00","relpermalink":"/post/forest-map/","section":"post","summary":"Create a Map in R with ggplot and transform it into a gif","tags":["ggplot2","map","gif","R"],"title":"Create a Map in R with ggplot and transform it into a gif","type":"post"},{"authors":["G Varela-Alvarenga"],"categories":null,"content":"A friend of mine asked if I could replicate the following plot: First, we load the packages and set the colors to be the same ones from the original plot (or at least, as close as possible).\n# ************************************************************************* ---- # Packages ---- # ************************************************************************* ---- #install.packages(\u0026quot;tidyverse\u0026quot;) library(\u0026quot;tidyverse\u0026quot;) # ************************************************************************* ---- # Colors - From the original plot ---- # ************************************************************************* ---- orange \u0026lt;- \u0026quot;#e8ab5f\u0026quot; green \u0026lt;- \u0026quot;#a1ad62\u0026quot; background_diff \u0026lt;- \u0026quot;#eef0e2\u0026quot; gray \u0026lt;- \u0026quot;#bbbbbb\u0026quot; light_gray \u0026lt;- \u0026quot;#f4f4f4\u0026quot;  Now, we need to recreate the data. I did that as if the data were organized as follows:\n# Country Ages_35_plus Ages_18_34 # 1 Germany 0.39 0.81 # 2 France 0.42 0.83 # 3 Vietnam 0.49 0.86 # 4 Japan 0.43 0.78 # 5 Poland 0.51 0.86 # 6 Lebanon 0.57 0.90 # 7 Australia 0.60 0.91 # 8 South Korea 0.45 0.75 # 9 Canada 0.65 0.93 # 10 Spain 0.57 0.85 # 11 Italy 0.57 0.83 # 12 Peru 0.65 0.91 # 13 U.S. 0.63 0.89 # 14 UK 0.59 0.84 # 15 Mexico 0.67 0.90 # 16 Chile 0.75 0.96 # 17 China 0.52 0.73 # 18 India 0.48 0.69 # 19 Pais A 0.60 0.40 # 20 Pais B 0.50 0.50  I\u0026rsquo;ve included Pais A and Pais B so that I have one country with a negative difference, and another one with a difference of zero.\n# ************************************************************************* ---- # Data for Dotplot ---- # ************************************************************************* ---- original_df \u0026lt;- data.frame( Country = c(\u0026quot;Germany\u0026quot;, \u0026quot;France\u0026quot;, \u0026quot;Vietnam\u0026quot;, \u0026quot;Japan\u0026quot;, \u0026quot;Poland\u0026quot;, \u0026quot;Lebanon\u0026quot;, \u0026quot;Australia\u0026quot;, \u0026quot;South Korea\u0026quot;, \u0026quot;Canada\u0026quot;, \u0026quot;Spain\u0026quot;, \u0026quot;Italy\u0026quot;, \u0026quot;Peru\u0026quot;, \u0026quot;U.S.\u0026quot;, \u0026quot;UK\u0026quot;, \u0026quot;Mexico\u0026quot;, \u0026quot;Chile\u0026quot;, \u0026quot;China\u0026quot;, \u0026quot;India\u0026quot;, \u0026quot;Pais A\u0026quot;, \u0026quot;Pais B\u0026quot; ), Ages_35_plus = c(0.39, 0.42, 0.49, 0.43, 0.51, 0.57, 0.60, 0.45, 0.65, 0.57, 0.57, 0.65, 0.63, 0.59, 0.67, 0.75, 0.52, 0.48, 0.6, 0.5 ), Ages_18_34 = c(0.81, 0.83, 0.86, 0.78, 0.86, 0.90, 0.91, 0.75, 0.93, 0.85, 0.83, 0.91, 0.89, 0.84, 0.90, 0.96, 0.73, 0.69, 0.4, 0.5 ) )  Given that, I needed to do 5 things before I started:\n1) Insert a line break in South Korea\n2) Calculate the age differences\n3) Sort countries by their age differences\n4) Set country names as factors so that we can plot it in the correct order.\n5) Gather columns into key-value pairs (age groups).\n## \\__Line Break original_df_v2 \u0026lt;- original_df %\u0026gt;% mutate( Country = ifelse( Country == \u0026quot;South Korea\u0026quot;, # Value_if_True: \u0026quot;South \\n Korea\u0026quot;, # Value_if_False: as.character(Country)) ) # _________________________________________________________________________ ==== ## \\__Calculate the age differences base_diff \u0026lt;- original_df_v2 %\u0026gt;% mutate( Diferenca = Ages_18_34-Ages_35_plus ) %\u0026gt;% Sort (descending), but that's OK as ggplot inverts the order arrange(Diferenca, desc(Country)) %\u0026gt;% # Create factors from the names of the ordered countries mutate( Country.fact = factor(Country, levels = unique(Country)) ) # _________________________________________________________________________ ==== ## \\__Gather columns df_diff_gather_age \u0026lt;- base_diff %\u0026gt;% gather( # Group Name key = Age_Group, # Name of the Variable to input the percentages of Age value = Age_Percent, # Age variables Ages_35_plus, Ages_18_34 ) %\u0026gt;% # Reorder the variables in the database select(Country, Country.fact, Age_Group, Age_Percent, Diferenca) #___________________________________________________________________________#### # ************************************************************************* ---- # Dot Plot ---- # ************************************************************************* ---- p\u0026lt;- ggplot( data = df_diff_gather_age, mapping = aes( # Y Axis y=Country.fact, # X Axis x=Age_Percent, # Groups with different colors # If difference is zero, put it into a third group color = ifelse(Diferenca == 0, \u0026quot;zero\u0026quot;, Age_Group)) ) + # Plot lines between points, by Country geom_line( mapping = aes(group = Country), color = gray, size = 2.5 ) + geom_point( # Dot size size=4, # dot type. Important to be number 19, otherwise we cannot plot the dots # with the colors for different groups pch = 19 ) + # Add % for each point geom_text( # Font size size = 4, # Set text a little below the dots nudge_y = -0.35, mapping = aes( label = # If country is Germany (the first one), plot numbers with % ifelse(Country == \u0026quot;Germany\u0026quot;, # Value_if_True: paste0(as.character(round(Age_Percent*100,0)),\u0026quot;%\u0026quot;), # Value_if_False paste0(as.character(round(Age_Percent*100,0))) ), color = ifelse(Diferenca == 0, \u0026quot;zero\u0026quot;, Age_Group) ) ) + # Add \u0026quot;Legend\u0026quot; above Germany (the first one) geom_text( # Font size size = 4, # Bold face fontface = \u0026quot;bold\u0026quot;, # Set text a little above the dots nudge_y = 0.6, mapping = aes( label = # If Country is Germany, plot legend ifelse(Country == \u0026quot;Germany\u0026quot;, # Value_if_True: ifelse(Age_Group == \u0026quot;Ages_35_plus\u0026quot;, # Value_if_True: \u0026quot;Ages 35+\u0026quot;, # Value_if_False: \u0026quot;Ages 18-34\u0026quot; ), # Value_if_False \u0026quot;\u0026quot; ), color = ifelse(Diferenca == 0, \u0026quot;zero\u0026quot;, Age_Group) ) ) + # Change dot colors scale_color_manual( values = c(orange, green, \u0026quot;gray\u0026quot;) ) + # Change scale x axis scale_x_continuous( # Set limits to 0 and 1.2 (we won't set it to 1 because we neeed some space # after 1 to place the values of the differences) limits = c(0,1.2), # Show tick marks at every 25% breaks = seq(0,1,.25), # Change scale to percent labels = scales::percent ) + # Expand y axis scale so that the legend can fit scale_y_discrete( expand = expand_scale(add=c(0.65,1)) ) + # Add white rectangle to set the area where the values of the differences will # be geom_rect( mapping = aes(xmin = 1.01, xmax = Inf , ymin = -Inf, ymax = Inf), fill = \u0026quot;white\u0026quot;, color = \u0026quot;white\u0026quot; ) + # Add rectangle with correct banground color for the differences geom_rect( mapping = aes(xmin = 1.05, xmax = 1.15 , ymin = -Inf, ymax = Inf), fill = background_diff, color = background_diff ) + # Add Differences values geom_text( # Bold face fontface = \u0026quot;bold\u0026quot;, # Font size size = 4, # Font Color colour = \u0026quot;black\u0026quot;, # Position mapping = aes( x = 1.1, y = Country, label = # To avoid duplicate values, plot empty text for the first group and # plot the difference only for the Ages_18_34 group. ifelse(Age_Group == \u0026quot;Ages_35_plus\u0026quot;, # Value_if_True \u0026quot;\u0026quot;, #Value_if_False # If the difference is equal to zero, do not put any signal. # Otherwise, if Positive, put the + sign on the front. ifelse(Diferenca == 0, # Value_if_True: paste0(as.character(round(Diferenca*100,0))), # Value_if_False ifelse(Diferenca \u0026gt; 0, # Value_if_True paste0(\u0026quot;+\u0026quot;,as.character(round(Diferenca*100,0))), # Value_if_False paste0(as.character(round(Diferenca*100,0))) ) ) ) ) ) + # Insert Title of Differences geom_text( # Bold face fontface = \u0026quot;bold\u0026quot;, # Font size size = 4, # Cor colour = \u0026quot;gray\u0026quot;, # Set text a little above the dots nudge_y = 0.6, # Position mapping = aes( x = 1.1, y = Country, label = # If Country is Germany, plot values ifelse(Country == \u0026quot;Germany\u0026quot;, # Value_if_True \u0026quot;DIFF\u0026quot;, #Value_if_False \u0026quot;\u0026quot; ) ) ) + # Plot Title and Axis Labels labs( title = \u0026quot;The social media age gap\u0026quot;, subtitle = paste0( \u0026quot;Adult internet users or reported smartphone owners who \\n\u0026quot;, \u0026quot;use social networking sites\u0026quot; ), x = \u0026quot;\u0026quot;, y = \u0026quot;\u0026quot; ) + # Change background, General font size, and other things theme( # Change font color and text for all text outside geom_text text = element_text(color = \u0026quot;#4e4d47\u0026quot;, size = 14), # Country names in bold face axis.text.y = element_text(face = \u0026quot;bold\u0026quot;), # Add space between x axis text and plot axis.text.x = element_text(vjust = -0.75), # Do not show tick marks axis.ticks = element_blank(), # Delete original legend (keep only the one we created) legend.position = \u0026quot;none\u0026quot;, # White background panel.background = element_blank(), # Country (y Axis) Lines panel.grid.major.y = element_line(colour = light_gray, size = 1), # Change Title Font plot.title = element_text(face = \u0026quot;bold\u0026quot;, size = 16), # Change Subtitle Font and add some margin plot.subtitle = element_text(face = \u0026quot;italic\u0026quot;, size = 12, margin = margin(b = 0.5, unit = \u0026quot;cm\u0026quot;)) ) p  And the final plot: ","date":1543381200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543381200,"objectID":"60bdf195de31966746136465d3b0f785","permalink":"/post/dotplot-ggplot/","publishdate":"2018-11-28T00:00:00-05:00","relpermalink":"/post/dotplot-ggplot/","section":"post","summary":"Create a Dumbbell Plot using geom_point","tags":["ggplot"],"title":"Create a Dumbbell Plot using ggplot","type":"post"},{"authors":["G Varela-Alvarenga"],"categories":null,"content":"This plot was created in response to this question on StackOverflow. The objective is to replicate the following plot: The trick to plot waterfall charts with ggplot2 is to create a data set with the groups (x values - I\u0026rsquo;m calling this in my code as x.axis.Var) in the exact order you want to plot. After that, you need to get the start and end points of the bars for each category (categories in your legend - cat.Var) within the groups. Then, you create another group with the totals by category. You\u0026rsquo;ll also need a numeric index for the groups to manipulate the bars. Finally, get a column with the total by group for the numbers above the bars.\nSuppose your dataframe looks like this:\ndf \u0026lt;- data.frame( x.axis.Var = rep(c(\u0026quot;Widgets\u0026quot;, \u0026quot;Gridgets\u0026quot;, \u0026quot;Groms\u0026quot;, \u0026quot;Wobs\u0026quot;), 3), cat.Var = rep(c(\u0026quot;High End\u0026quot;, \u0026quot;Mid Range\u0026quot;, \u0026quot;Low End\u0026quot;), each = 4), values = c(600, 500, 300, 200, # high end 300, 200, 300, 250, # mid range 100, 80, 200, 150 # low end ) )  Or,\nx.axis.Var cat.Var values 1 Widgets High End 600 2 Gridgets High End 500 3 Groms High End 300 4 Wobs High End 200 5 Widgets Mid Range 300 6 Gridgets Mid Range 200 7 Groms Mid Range 300 8 Wobs Mid Range 250 9 Widgets Low End 100 10 Gridgets Low End 80 11 Groms Low End 200 12 Wobs Low End 150  Follow the steps below to get a new data frame:\nlibrary('tidyverse') df.tmp \u0026lt;- df %\u0026gt;% # \\_Set the factor levels in the order you want ---- mutate( x.axis.Var = factor(x.axis.Var, levels = c(\u0026quot;Widgets\u0026quot;, \u0026quot;Gridgets\u0026quot;, \u0026quot;Groms\u0026quot;, \u0026quot;Wobs\u0026quot;)), cat.Var = factor(cat.Var, levels = c(\u0026quot;Low End\u0026quot;, \u0026quot;Mid Range\u0026quot;, \u0026quot;High End\u0026quot;)) ) %\u0026gt;% # \\_Sort by Group and Category ---- arrange(x.axis.Var, desc(cat.Var)) %\u0026gt;% # \\_Get the start and end points of the bars ---- mutate(end.Bar = cumsum(values), start.Bar = c(0, head(end.Bar, -1))) %\u0026gt;% # \\_Add a new Group called 'Total' with total by category ---- rbind( df %\u0026gt;% # \\___Sum by Categories ---- group_by(cat.Var) %\u0026gt;% summarise(values = sum(values)) %\u0026gt;% # \\___Create new Group: 'Total' ---- mutate( x.axis.Var = \u0026quot;Total\u0026quot;, cat.Var = factor(cat.Var, levels = c(\u0026quot;Low End\u0026quot;, \u0026quot;Mid Range\u0026quot;, \u0026quot;High End\u0026quot;)) ) %\u0026gt;% # \\___Sort by Group and Category ---- arrange(x.axis.Var, desc(cat.Var)) %\u0026gt;% # \\___Get the start and end points of the bars ---- mutate(end.Bar = cumsum(values), start.Bar = c(0, head(end.Bar, -1))) %\u0026gt;% # \\___Put variables in the same order ---- select(names(df),end.Bar,start.Bar) ) %\u0026gt;% # \\_Get numeric index for the groups ---- mutate(group.id = group_indices(., x.axis.Var)) %\u0026gt;% # \\_Create new variable with total by group ---- group_by(x.axis.Var) %\u0026gt;% mutate(total.by.x = sum(values)) %\u0026gt;% # \\_Order the columns ---- select(x.axis.Var, cat.Var, group.id, start.Bar, values, end.Bar, total.by.x)  This yields:\nx.axis.Var cat.Var group.id start.Bar values end.Bar total.by.x \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; 1 Widgets High End 1 0 600 600 1000 2 Widgets Mid Range 1 600 300 900 1000 3 Widgets Low End 1 900 100 1000 1000 4 Gridgets High End 2 1000 500 1500 780 5 Gridgets Mid Range 2 1500 200 1700 780 6 Gridgets Low End 2 1700 80 1780 780 7 Groms High End 3 1780 300 2080 800 8 Groms Mid Range 3 2080 300 2380 800 9 Groms Low End 3 2380 200 2580 800 10 Wobs High End 4 2580 200 2780 600 11 Wobs Mid Range 4 2780 250 3030 600 12 Wobs Low End 4 3030 150 3180 600 13 Total High End 5 0 1600 1600 3180 14 Total Mid Range 5 1600 1050 2650 3180 15 Total Low End 5 2650 530 3180 3180  Then, I can use the following code to get the plot that I want:\nggplot(df.tmp, aes(x = group.id, fill = cat.Var)) + # \\_Simple Waterfall Chart ---- geom_rect(aes(x = group.id, xmin = group.id - 0.25, # control bar gap width xmax = group.id + 0.25, ymin = end.Bar, ymax = start.Bar), color=\u0026quot;black\u0026quot;, alpha=0.95) + # \\_Lines Between Bars ---- geom_segment(aes(x=ifelse(group.id == last(group.id), last(group.id), group.id+0.25), xend=ifelse(group.id == last(group.id), last(group.id), group.id+0.75), y=ifelse(cat.Var == \u0026quot;Low End\u0026quot;, end.Bar, # these will be removed once we set the y limits max(end.Bar)*2), yend=ifelse(cat.Var == \u0026quot;Low End\u0026quot;, end.Bar, # these will be removed once we set the y limits max(end.Bar)*2)), colour=\u0026quot;black\u0026quot;) + # \\_Numbers inside bars (each category) ---- geom_text( mapping = aes( label = ifelse(values \u0026lt; 150, \u0026quot;\u0026quot;, ifelse(nchar(values) == 3, as.character(values), sub(\u0026quot;(.{1})(.*)\u0026quot;, \u0026quot;\\\\1.\\\\2\u0026quot;, as.character(values) ) ) ), y = rowSums(cbind(start.Bar,values/2)) ), color = \u0026quot;white\u0026quot;, fontface = \u0026quot;bold\u0026quot; ) + # \\_Total for each category above bars ---- geom_text( mapping = aes( label = ifelse(cat.Var != \u0026quot;Low End\u0026quot;, \u0026quot;\u0026quot;, ifelse(nchar(total.by.x) == 3, as.character(total.by.x), sub(\u0026quot;(.{1})(.*)\u0026quot;, \u0026quot;\\\\1.\\\\2\u0026quot;, as.character(total.by.x) ) ) ), y = end.Bar+200 ), color = \u0026quot;#4e4d47\u0026quot;, fontface = \u0026quot;bold\u0026quot; ) + # \\_Change colors ---- scale_fill_manual(values=c('#c8f464','#ff6969','#55646e')) + # \\_Change y axis to same scale as original ---- scale_y_continuous( expand=c(0,0), limits = c(0, 3500), breaks = seq(0, 3500, 500), labels = ifelse(nchar(seq(0, 3500, 500)) \u0026lt; 4, as.character(seq(0, 3500, 500)), sub(\u0026quot;(.{1})(.*)\u0026quot;, \u0026quot;\\\\1.\\\\2\u0026quot;, as.character(seq(0, 3500, 500)) ) ) ) + # \\_Add tick marks on x axis to look like the original plot ---- scale_x_continuous( expand=c(0,0), limits = c(min(df.tmp$group.id)-0.5,max(df.tmp$group.id)+0.5), breaks = c(min(df.tmp$group.id)-0.5, unique(df.tmp$group.id), unique(df.tmp$group.id) + 0.5 ), labels = c(\u0026quot;\u0026quot;, as.character(unique(df.tmp$x.axis.Var)), rep(c(\u0026quot;\u0026quot;), length(unique(df.tmp$x.axis.Var))) ) ) + # \\_Theme options to make it look like the original plot ---- theme( text = element_text(size = 14, color = \u0026quot;#4e4d47\u0026quot;), axis.text = element_text(size = 10, color = \u0026quot;#4e4d47\u0026quot;, face = \u0026quot;bold\u0026quot;), axis.text.y = element_text(margin = margin(r = 0.3, unit = \u0026quot;cm\u0026quot;)), axis.ticks.x = element_line(color = c(\u0026quot;black\u0026quot;, rep(NA, length(unique(df.tmp$x.axis.Var))), rep(\u0026quot;black\u0026quot;, length(unique(df.tmp$x.axis.Var))-1) ) ), axis.line = element_line(colour = \u0026quot;#4e4d47\u0026quot;, size = 0.5), axis.ticks.length = unit(.15, \u0026quot;cm\u0026quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), panel.background = element_blank(), plot.margin = unit(c(1, 1, 1, 1), \u0026quot;lines\u0026quot;), legend.text = element_text(size = 10, color = \u0026quot;#4e4d47\u0026quot;, face = \u0026quot;bold\u0026quot;, margin = margin(l = 0.25, unit = \u0026quot;cm\u0026quot;) ), legend.title = element_blank() )  And the final plot: ","date":1538193600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538193600,"objectID":"0a9a9c92d178fc37a1466b68834a75c8","permalink":"/post/waterfall-ggplot/","publishdate":"2018-09-29T00:00:00-04:00","relpermalink":"/post/waterfall-ggplot/","section":"post","summary":"Create a create a 'stacked waterfall' chart in R","tags":["ggplot"],"title":"Create a Waterfall Chart using ggplot","type":"post"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536465600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536465600,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"/tutorial/example/","publishdate":"2018-09-09T00:00:00-04:00","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":null,"categories":null,"content":"","date":1532448000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1532448000,"objectID":"9628848184842448c1efc77e4fdb0692","permalink":"/project/shiny-modal-modules-jquery/","publishdate":"2018-07-24T12:00:00-04:00","relpermalink":"/project/shiny-modal-modules-jquery/","section":"project","summary":"Use this modal to add/remove sets of variables (and their values) to a dataset.","tags":["Shiny App","Shiny Module","jQuery","JavaScript"],"title":"Shiny App with Modal, Modules and jQuery","type":"project"},{"authors":null,"categories":null,"content":"","date":1532440800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1532440800,"objectID":"a97865dd8b70670865bbbd0fbddb954d","permalink":"/project/shiny-compare-images/","publishdate":"2018-07-24T10:00:00-04:00","relpermalink":"/project/shiny-compare-images/","section":"project","summary":"Choose between two randomly generated images.","tags":["Shiny App"],"title":"Shiny App to Compare Images","type":"project"},{"authors":[],"categories":null,"content":"Click on the **Slides** button above to view the built-in slides feature.  Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using url_slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1483246800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483246800,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00-05:00","relpermalink":"/talk/example/","section":"talk","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":"Issued by the Brazilian National Confederation of Industry with the support from the Brazilian Association of Graduate Centers in Economics.\nAward granted to the paper: ``Impacts of the Brazilian Sector Funds on industrial firms’ R\u0026amp;D inputs and outputs: New perspectives using a dose-response function\u0026rdquo; (original title: Impactos dos Fundos Setoriais nas Empresas: Novas Perspectivas a partir da Função Dose-Resposta).\nClick here for the full paper in English and here for more information about the award.\n","date":1355288400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1355288400,"objectID":"12f0bc72637bd50e801ef683b23b1988","permalink":"/awards/premio-cni/","publishdate":"2012-12-12T00:00:00-05:00","relpermalink":"/awards/premio-cni/","section":"awards","summary":"Issued by the Brazilian National Confederation of Industry with the support from the Brazilian Association of Graduate Centers in Economics.\nAward granted to the paper: ``Impacts of the Brazilian Sector Funds on industrial firms’ R\u0026amp;D inputs and outputs: New perspectives using a dose-response function\u0026rdquo; (original title: Impactos dos Fundos Setoriais nas Empresas: Novas Perspectivas a partir da Função Dose-Resposta).\nClick here for the full paper in English and here for more information about the award.","tags":null,"title":"CNI National Economy Award (Prêmio CNI de Economia)","type":"awards"},{"authors":["G Varela-Alvarenga","DM Pianto","BC Araújo"],"categories":null,"content":"","date":1355288400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1355288400,"objectID":"37fd9fd239b8d0832cb01da6a5671991","permalink":"/publication/dose-response-function/","publishdate":"2012-12-12T00:00:00-05:00","relpermalink":"/publication/dose-response-function/","section":"publication","summary":"This study aims to assess the impact of Brazilian Sector Funds from the standpoint of the amount of resources provided to industrial companies between 2001 and 2006. We evaluate the impact of government investment on firms’ indicators of technological efforts and outcomes (size and high-technology exports). To this end, we use a technique that evaluates private investments’ response to different amounts of public incentive, using the generalized propensity score. This is the first study in Brazil that uses a continuous treatment technique to assess the impact of public incentives for innovation. Estimates for the average effects indicate that, compared to those which have not received incentives, if the government had increased the resources provided by Sector Funds by 1%, firms would have increased their R\u0026D investments by 1.5% in the year that they received those resources and 1.8% four years after access. Furthermore, the impacts of the Sector Funds on treatment level indicate a quadratic “U”-shaped relationship, suggesting that these resources have more impact on the extremes of the distribution, that is, they have stronger relative impact for very small firms and for medium-sized or large firms. All of these results allow us to reject the crowding-out hypothesis.","tags":[],"title":"Impacts of the Brazilian Science and Technology Sector Funds on industrial firms’ R\u0026D inputs and outputs: New perspectives using a dose-response function","type":"publication"},{"authors":["PF Alves","G Varela-Alvarenga","CH Rocha"],"categories":null,"content":"","date":1309492800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1309492800,"objectID":"4651330a1ebc8c95ca064773d85422ac","permalink":"/publication/airticket/","publishdate":"2011-07-01T00:00:00-04:00","relpermalink":"/publication/airticket/","section":"publication","summary":"The air transport demand is directly related to economic cycles (domestic and international), to the currency fluctuations and exchange, and to the performance of economies. The airline industry performance can be used as a measure of the economic heating level. This sector is highly capital intensive and energy based, being an essential tool in a country’s production chain, as it relates different areas. This paper seeks to determine whether there is a long-term equilibrium between the demand for airline tickets, its prices, and macroeconomic indicators – such as GDP and fuel prices in Brazil. The analysis focuses on the demand of airlines TAM, Gol (and VARIG) and WebJet, which together represent about 85% of domestic passenger transportation. Results states that economic growth is one of the key factors on airport infrastructure capacity pressure, however the long run price parameter has a low intensity, which reflects the business travel passenger type dominance in Brazilian air transportation.","tags":[],"title":"Demand for air ticket in the Brazilian economy: a co-integration analysis (original title: Demanda por ticket aéreo na economia brasileira: uma análise de co-integração).","type":"publication"},{"authors":["G Varela-Alvarenga","et.al"],"categories":null,"content":"","date":1285905600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1285905600,"objectID":"92acc2aeb24bc8e06398c98b8bb0cb25","permalink":"/publication/vehicle-sales/","publishdate":"2010-10-01T00:00:00-04:00","relpermalink":"/publication/vehicle-sales/","section":"publication","summary":"The aim of this paper is to analyze the impacts of the reduction of the Brazilian Tax on Industrialized Products (IPI) on the local sales of vehicles during the period between January and November of 2009. In order to evaluate these impacts, sales have been modeled as a function of price, income and credit for the acquisition of vehicles. The econometric model takes into account the existence of short run and long run relationships among the variables. The results obtained for the long run elasticities of transmission as well as for their short run adjustment speeds reinforce the perception that the reduction of the IPI was particularly relevant to the recovery of the vehicle sales in Brazil in the period after the international financial crisis. The results showed that 20.7% of the vehicle sales during the period can be associated to the reduction of the IPI. An increment in the credit for the acquisition of vehicles could have showed a not negligible effect on the vehicle sales especially in the absence of other countercyclical measures in 2009.","tags":[],"title":"Counter-cyclical policies in the automobile industry: a co-integration analysis of the impacts of IPI reduction on vehicle sales (original title: Políticas anticíclicas na indústria automobilística: uma análise de co-integração dos impactos da redução do IPI sobre as vendas de veículos).","type":"publication"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]